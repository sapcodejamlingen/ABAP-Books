*&---------------------------------------------------------------------*
*& Report  Z_FIRST_PROGRAM
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  z_first_program.

************************************************************************
* Report Name  : Z_FIRST_PROGRAM                                       *
* Report Title : Das Hello World Program                               *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 01/24/2019 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  : ABAP Objects 2. AUfl. S.45               *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.1 | Date:01.24.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************

PARAMETERS input(16) TYPE c DEFAULT 'Hello World!'.

START-OF-SELECTION.
  WRITE ' The input was:'.
  WRITE input.



*&---------------------------------------------------------------------*
*& Report  Z_FIRST_PROGRAM
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  z_first_program.

************************************************************************
* Report Name  : Z_FIRST_PROGRAM                                                 *
* Report Title : <description>                                         *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 01/23/2019 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.1 | Date:01.24.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************

TABLES spfli.

*----------------------------------------------------------------------*
*       CLASS application DEFINITION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS application DEFINITION.
  PUBLIC SECTION.
    METHODS: constructor,
             read_data IMPORTING l_carrid TYPE spfli-carrid,
               fill_list.
  PRIVATE SECTION.
    DATA: spfli_tab TYPE TABLE OF spfli,
          container TYPE REF TO cl_gui_custom_container,
          alv_list  TYPE REF TO cl_gui_alv_grid.
ENDCLASS.                    "application DEFINITION

*----------------------------------------------------------------------*
*       CLASS application IMPLEMENTATION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS application IMPLEMENTATION.
  METHOD read_data.
    SELECT *
      FROM spfli
      INTO TABLE spfli_tab
      WHERE carrid = l_carrid.
  ENDMETHOD.                    "read_data
  METHOD constructor.
    CREATE OBJECT container
      EXPORTING
        container_name              = 'LIST_AREA'.
    CREATE OBJECT alv_list
      EXPORTING
        i_parent          = container.

    CALL METHOD alv_list->set_table_for_first_display
      EXPORTING
        i_structure_name = 'SPFLI'
      CHANGING
        it_outtab        = spfli_tab.
  ENDMETHOD.                    "constructor
  METHOD fill_list.
    CALL METHOD alv_list->refresh_table_display.
  ENDMETHOD.                    "fill_list
ENDCLASS.                    "application IMPLEMENTATION

DATA object_ref TYPE REF TO application.
START-OF-SELECTION.
  CREATE OBJECT object_ref.
  CALL SCREEN 100.
*  WRITE ' The input was:'.
*  WRITE input.
*&---------------------------------------------------------------------*
*&      Module  STATUS_0100  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE status_0100 OUTPUT.
  SET PF-STATUS 'SCREEN_100'.
  CALL METHOD object_ref->fill_list.
ENDMODULE.                 " STATUS_0100  OUTPUT
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0100  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE user_command_0100 INPUT.
  IF sy-ucomm   = 'BACK' OR
    sy-ucomm    = 'EXIT' OR
    sy-ucomm    = 'CANCEL'.
    LEAVE PROGRAM.
  ELSE.
    CALL METHOD object_ref->read_data
      EXPORTING
        l_carrid = spfli-carrid.
  ENDIF.
ENDMODULE.                 " USER_COMMAND_0100  INPUT



*&---------------------------------------------------------------------*
*& Report  Z_PROZESSING_BLOCKS
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  z_prozessing_blocks.

************************************************************************
* Report Name  : Z_PROZESSING_BLOCKS                                       *
* Report Title : Verarbeitungsblöcke                               *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 01/24/2019 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  : ABAP Objects 2. AUfl. S.45               *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.1 | Date:01.24.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************

DATA: wa_spfli TYPE spfli,
      wa_sflight TYPE sflight.
SELECT SINGLE *
  FROM spfli
  INTO wa_spfli
  WHERE carrid = 'LH' AND
  connid = '0400'.

PERFORM output USING wa_spfli.

*&---------------------------------------------------------------------*
*&      Form  output
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->L_SPFLI    text
*----------------------------------------------------------------------*
FORM output USING l_spfli TYPE spfli.
  WRITE: / l_spfli-cityfrom, l_spfli-cityto.
ENDFORM.                    "output

AT LINE-SELECTION.
  SELECT *
    FROM sflight
    INTO wa_sflight
    WHERE carrid = 'LH' AND
          connid = '0400'.
    WRITE: / wa_sflight-fldate,
    wa_sflight-seatsmax,
    wa_sflight-seatsocc.
  ENDSELECT.


TYPE-POOL ztygr .

TYPES: BEGIN OF ztygr_struct,
        col1 TYPE i,
        col2 TYPE i,
       END OF ztygr_struct.

TYPES ztygr_tab TYPE HASHED TABLE
                OF ztygr_struct
                WITH UNIQUE KEY col1.

*&---------------------------------------------------------------------*
*& Report  Z_ELEMENTARY_DATA
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  z_elementary_data.

************************************************************************
* Report Name  : z_elementary_data                                     *
* Report Title : Elementare Datentypen und Objecte                     *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 01/24/2019 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  : ABAP Objects 2. AUfl. S.129               *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.1 | Date:01.24.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************


TYPES t_result TYPE p DECIMALS 2.

DATA: number_1 TYPE i VALUE 3,
      number_2 LIKE number_1 VALUE 4,
      result TYPE t_result.

result = number_1 / number_2.

WRITE result.



*&---------------------------------------------------------------------*
*& Report  Z_STRUCTURED_DATA_B
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  Z_STRUCTURED_DATA_B.

************************************************************************
* Report Name  : Z_STRUCTURED_DATA_B                                   *
* Report Title : Strukturierte Datentypen und Objecte                  *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 01/24/2019 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  : ABAP Objects 2. AUfl. S.132               *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.1 | Date:01.24.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************

types: begin of t_street,
  name(40) type c,
  no(4) type c,
  end of t_street.

  data: begin of address,
    name(30) type c,
    street type t_street,
    begin of city,
      zipcode(5) type n,
      name(40) type c,
      end of city,
      country(3) type c value 'SOL',
      end of address.

    address-name          = 'Luke Skywalker'.
    address-street-name   = 'Milky Way'.
    address-street-no     = '123d'.
    address-city-zipcode  = '64283'.
    address-city-name     = 'Tatooine'.





*&---------------------------------------------------------------------*
*& Report  Z_INCLUDE_STRUCTURE_B
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  z_include_structure_b.

************************************************************************
* Report Name  : Z_INCLUDE_STRUCTURE_B                                 *
* Report Title : Einfügen von Strukturkomponenten                 *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 01/24/2019 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  : ABAP Objects 2. AUfl. S.134               *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.1 | Date:01.24.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************

DATA: BEGIN OF street,
        name(40) TYPE c,
        no(4) TYPE c,
  END OF street.

DATA: BEGIN OF city,
        zipcode(5) TYPE n,
        name(40) TYPE c,
  END OF city.

DATA: BEGIN OF address,
        name(30) TYPE c.
        INCLUDE STRUCTURE street AS str
              RENAMING WITH SUFFIX _str.
        INCLUDE STRUCTURE city AS city
              RENAMING WITH SUFFIX _cty.
DATA END OF address.

address-name        = 'Han Solo'.
address-name_str    = 'Crab Nebula'.
address-no_str      = '18'.
address-zipcode_cty = '69121'.
address-name_cty    = 'Dark Star'.

WRITE: / address-name,
       / address-str-name,
       / address-no_str,
       / address-zipcode_cty,
       / address-name_cty.




TYPE-POOL ztygr .

TYPES: BEGIN OF ztygr_struct,
        col1 TYPE i,
        col2 TYPE i,
       END OF ztygr_struct.

TYPES ztygr_tab TYPE HASHED TABLE
                OF ztygr_struct
                WITH UNIQUE KEY col1.



*&---------------------------------------------------------------------*
*& Report  Z_TEXT_SYMBOLS
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  Z_TEXT_SYMBOLS.

************************************************************************
* Report Name  : Z_TEXT_SYMBOLS                                       *
* Report Title : Textsymbole                               *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 01/24/2019 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  : ABAP Objects 2. AUfl. S.153               *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.1 | Date:01.24.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************

data mytext(20) type c.
mytext = text-010.
Write: / mytext, text-020.




*&---------------------------------------------------------------------*
*& Report  Z_SYSTEM_FIELDS_B
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  Z_SYSTEM_FIELDS_B.

************************************************************************
* Report Name  : Z_SYSTEM_FIELDS_B                                    *
* Report Title : Verwendung von Systemfeldern                   *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 01/24/2019 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  : ABAP Objects 2. AUfl. S.156               *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.1 | Date:01.24.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************

write: / 'Guten Tag User', sy-uname,
       / 'das heutige Datum ist', sy-datum,
       / 'und es ist', sy-uzeit, 'Uhr.'.





*&---------------------------------------------------------------------*
*& Report  Z_DESCRIBE_FIELD
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  z_describe_field.

************************************************************************
* Report Name  : Z_DESCRIBE_FIELD                                   *
* Report Title : Anweisung describe field                   *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 01/24/2019 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  : ABAP Objects 2. AUfl. S.156               *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.1 | Date:01.24.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************

DATA: f1(20) TYPE c,
      f2 TYPE p DECIMALS 2.

PERFORM: test USING f1,
         test USING f2.

*&---------------------------------------------------------------------*
*&      Form  test
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->U_INPUT    text
*----------------------------------------------------------------------*
FORM test USING u_input TYPE any.
  DATA: t(1) TYPE c,
        l TYPE i,
        d TYPE i.
*  DESCRIBE FIELD u_input TYPE t LENGTH l DECIMALS d.
  WRITE: / 'Typ:', t, 'Länge', l, 'Dezimalstellen', d.
ENDFORM.                    "test




*&---------------------------------------------------------------------*
*& Report  Z_RTTI_B
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  Z_RTTI_B.

************************************************************************
* Report Name  : Z_RTTI_B                                                 *
* Report Title : rtti mit globalen Klassen                 *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 01/24/2019 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  : ABAP Objects 2. AUfl. S.159               *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.1 | Date:01.24.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************

types my_type type p decimals 2.

data: my_data type my_type,
      descr_ref type ref to cl_abap_typedescr.

descr_ref = cl_abap_typedescr=>describe_by_data( my_data ).

write: / 'Typname',   descr_ref->absolute_name,
       / 'Kind',      descr_ref->type_kind,
       / 'length :',  descr_ref->length,
       / 'Decimals:', descr_ref->decimals.




*&---------------------------------------------------------------------*
*& Report  Z_MOVE_CORRESPONDING
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  Z_MOVE_CORRESPONDING.

************************************************************************
* Report Name  : Z_MOVE_CORRESPONDING                                                 *
* Report Title : Anweisung MOVE_CORRESPONDING                *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 01/24/2019 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  : ABAP Objects 2. AUfl. S.161               *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.1 | Date:01.24.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************

data: begin of wa_connection,
  carrid type spfli-carrid value 'LH',
  connid type spfli-connid value '0400',
  end of wa_connection.
  data wa_spfli type spfli.
  move-corresponding wa_connection to wa_spfli.


*&---------------------------------------------------------------------*
*& Report  Z_CONVERSION_ERRORS_B
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  z_conversion_errors_b.

************************************************************************
* Report Name  : Z_CONVERSION_ERRORS_B                                *
* Report Title : Laufzeitfehler bei Zuweisung konvertibler Typen       *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 01/24/2019 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  : ABAP Objects 2. AUfl. S.163               *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.1 | Date:01.24.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************

DATA: f1(10) TYPE c VALUE 'Text',
      f2(10) TYPE c VALUE '1234'.

PERFORM:  times2 USING f1,
          times2 USING f2.

*&---------------------------------------------------------------------*
*&      Form  times2
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->U_INPUT    text
*----------------------------------------------------------------------*
FORM times2 USING u_input TYPE c.
  DATA result TYPE i.
  CATCH SYSTEM-EXCEPTIONS conversion_errors = 4.
    result = u_input * 2.
  ENDCATCH.
  IF sy-subrc = 0.
    WRITE: / u_input, '* 2= ', result.
  ELSE.
    WRITE: / u_input, 'is no number'.
  ENDIF.
ENDFORM.                                                    "times2


*&---------------------------------------------------------------------*
*& Report  Z_DATE_TIME
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  z_date_time.

************************************************************************
* Report Name  : Z_DATE_TIME                                                 *
* Report Title : Datums und Zeitberechnungen       *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 01/24/2019 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  : ABAP Objects 2. AUfl. S.172               *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.1 | Date:01.24.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************

PARAMETERS t_start TYPE t DEFAULT '080000'.

DATA: d_start TYPE d,
      year_days TYPE i,
      working_hours TYPE i.

d_start = sy-datum.
d_start+4(4) = '0101'.
year_days = sy-datum - d_start + 1.
working_hours = ( sy-uzeit - t_start ) / 3600.

WRITE: / 'Tag', year_days, 'in Jahr', sy-datum(4),
       / 'Bisherige Arbeitsstunden:', working_hours.



*&---------------------------------------------------------------------*
*& Report  Z_IF_ENDIF
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  z_if_endif.

************************************************************************
* Report Name  : Z_IF_ENDIF                                            *
* Report Title : Programmverzweigungen                                 *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 01/23/2019 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  :  ABAP Objects 2. Aufl. S. 181                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.1 | Date:01.24.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************

IF sy-saprl < '45A'.
  WRITE: / 'ABAP Release', sy-saprl,
            'is not objectoriented'.
ELSE.
  IF sy-saprl < '46A'.
    WRITE: / 'ABAP Release', sy-saprl,
              ' is partly objectoriented'.
  ELSE.
    WRITE: / 'ABAP Release', sy-saprl,
              'is fully objectoriented'.
  ENDIF.
ENDIF.



*&---------------------------------------------------------------------*
*& Report  Z_CASE_ENDCASE
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  z_case_endcase.

************************************************************************
* Report Name  : Z_CASE_ENDCASE                                       *
* Report Title : Programmverzweigungen mit der Anweisung CASE.         *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 01/23/2019 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  :  ABAP Objects 2. Aufl. S. 182                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.1 | Date:01.24.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************

CASE sy-datum+4(2).
  WHEN '12' OR '01' OR '02'.
    WRITE / 'Winter'.
  WHEN '03' OR '04' OR '05'.
    WRITE / 'Spring'.
  WHEN '06' OR '07' OR '08'.
    WRITE / 'Summer'.
  WHEN '09' OR '10' OR '11'.
    WRITE / 'Autumn'.
  WHEN OTHERS.
    WRITE 'Illegal Date'.
ENDCASE.




*&---------------------------------------------------------------------*
*& Report  Z_WHILE_ENDWHILE
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  z_while_endwhile.

************************************************************************
* Report Name  : Z_WHILE_ENDWHILE                                      *
* Report Title : Geschachtelte  While Schlifen                         *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 01/23/2019 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  :  ABAP Objects 2. Aufl. S. 183                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.1 | Date:01.24.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************

DATA: inner_limit TYPE i VALUE 5,
      outer_limit TYPE i VALUE 5,
      inner_index TYPE i,
      outer_index TYPE i.

WHILE outer_limit > 0.
  outer_index = sy-index.

  WRITE: /  'Äußerer Schleifendurchgang:', sy-index,
            'Limit:', outer_limit.
  inner_limit = 5.
  WHILE inner_limit > 0.
    inner_index = sy-index.
    WRITE: /  ' Innerer Schleifendurchgang:', sy-index,
              ' Limit:', inner_limit.
    inner_limit = inner_limit - 1.
  ENDWHILE.
  outer_limit = outer_limit - 1.
ENDWHILE.





*&---------------------------------------------------------------------*
*& Report  Z_DO_ENDDO
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  z_do_enddo.

************************************************************************
* Report Name  : Z_DO_ENDDO                                                 *
* Report Title : Verwendung der Anweisung CHECK.         *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 01/23/2019 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  :  ABAP Objects 2. Aufl. S. 186                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.1 | Date:01.24.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************


DATA: is_zero TYPE i.
DO 2 TIMES.
  is_zero = sy-index MOD 2.
  CHECK is_zero = 0.
  WRITE: / sy-index, 'ist gerade.'.
ENDDO.




*&---------------------------------------------------------------------*
*& Report  Z_CONCATENATE
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  z_concatenate.

************************************************************************
* Report Name  : Z_CONCATENATE                                                 *
* Report Title : Anweisung Concatenate         *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 01/23/2019 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  :  ABAP Objects 2. Aufl. S. 187                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.1 | Date:01.24.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************

DATA: s1(72) TYPE c,
      s2(72) TYPE c,
      s3 TYPE string.

s1 = 'ABAP'.
s2 = 'Objects'.

CONCATENATE s1 s2 INTO s3 SEPARATED BY space.
WRITE: / s3.


*&---------------------------------------------------------------------*
*& Report  Z_SPLIT
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  z_split.

************************************************************************
* Report Name  : Z_SPLIT                                                 *
* Report Title : Zerlegen einer Zeichenkette mit SPLIT.         *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 01/23/2019 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  :  ABAP Objects 2. Aufl. S. 188                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.1 | Date:01.24.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************

DATA: text TYPE string,
      itab TYPE TABLE OF string.
text = 'ABAP Objects ist der Schlüssel' &
       ' zur OOP im SAP-System'.
SPLIT text AT space INTO TABLE itab.
LOOP AT itab INTO text.
  WRITE: / text.
ENDLOOP.



*&---------------------------------------------------------------------*
*& Report  Z_SEARCH
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  z_search.

************************************************************************
* Report Name  : Z_SEARCH                                             *
* Report Title : Suche in einer Zeichenkette mit versch. Suchmustern  *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 01/23/2019 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  :  ABAP Objects 2. Aufl. S. 182                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.1 | Date:01.24.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************

DATA: text TYPE string.

text = 'The quick brown Fox jumps over the lazy dog!'.

WRITE: / 'Search in',
         '''The quick brown Fox jumps over the lazy dog!'''.
SKIP.

SEARCH text FOR 'dog'.
WRITE: / 'Search text FOR ''dog'''.
WRITE: / 'sy-subrc:', sy-subrc, / 'sy-fdpos:', sy-fdpos.
ULINE.

SEARCH text FOR '.dog .'.
WRITE: / 'Search text FOR ''.dog .'''.
WRITE: / 'sy-subrc:', sy-subrc, / 'sy-fdpos:', sy-fdpos.
ULINE.


SEARCH text FOR 'laz*'.
WRITE: / 'Search text FOR ''laz*'''.
WRITE: / 'sy-subrc:', sy-subrc, / 'sy-fdpos:', sy-fdpos.
ULINE.


SEARCH text FOR '*azy'.
WRITE: / 'Search text FOR ''*azy'''.
WRITE: / 'sy-subrc:', sy-subrc, / 'sy-fdpos:', sy-fdpos.


*&---------------------------------------------------------------------*
*& Report  Z_REPLACE
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  z_replace.

************************************************************************
* Report Name  : Z_REPLACE                                                 *
* Report Title : Vollständiges Suchen und ersetzen                *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 01/24/2019 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  : ABAP Objects 2. AUfl. S.190               *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.1 | Date:01.24.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************

DATA text TYPE string.
text = 'Token 1, Token 2, Token 3, Token 4'.
WHILE sy-subrc = 0.
  REPLACE ', ' WITH ' - ' INTO text.
ENDWHILE.
WRITE / text.



*&---------------------------------------------------------------------*
*& Report  Z_STRLEN_B
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  z_strlen_b.

************************************************************************
* Report Name  : Z_STRLEN_B                                                 *
* Report Title : Die Funktion strln                 *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 01/24/2019 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  : ABAP Objects 2. AUfl. S.191               *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.1 | Date:01.24.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************

DATA: text(72) TYPE c VALUE 'ABAP Objects',
      len TYPE i.
len = STRLEN( text ).
WRITE: / 'Length of ', text, 'is', len.


*&---------------------------------------------------------------------*
*& Report  Z_STRING_COMPARISON
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  z_string_comparison.

************************************************************************
* Report Name  : Z_STRING_COMPARISON                                                 *
* Report Title : Zeichenkettenvergleich                 *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 01/24/2019 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  : ABAP Objects 2. AUfl. S.193               *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.1 | Date:01.24.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************

DATA: s1 TYPE string,
      s2 TYPE string.

s1 = 'ABAP Objects'.
s2 = 'Objects'.

IF s1 CS s2..
  WRITE: / s2, 'ist ab Position', sy-fdpos,
  'in', s1, 'enthalten'.
ENDIF.


*&---------------------------------------------------------------------*
*& Report  Z_OFFSET_LENGTH_B
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  z_offset_length_b.

************************************************************************
* Report Name  : Z_OFFSET_LENGTH_B                                                 *
* Report Title : Offset und Längenangabe                 *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 01/24/2019 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  : ABAP Objects 2. AUfl. S.194              *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.1 | Date:01.24.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************

SELECTION-SCREEN BEGIN OF SCREEN 500.
PARAMETERS: day(2) TYPE c,
            month(2) TYPE c,
            year(4) TYPE c.
SELECTION-SCREEN END OF SCREEN 500.

DATA new_date TYPE d.

year  = sy-datum(4).
month = sy-datum+4(2).
day   = sy-datum+6(2).

CALL SELECTION-SCREEN 500 STARTING AT 10 10.

new_date(4) = year.
new_date+4(2) = month.
new_date+6(2) = day.

IF new_date <> 0.
  WRITE new_date DD/MM/YY.
ELSE.
  WRITE 'Wrong Date!'.
ENDIF.


*&---------------------------------------------------------------------*
*& Report  Z_SIMPLE_FIELD_SYMBOL
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  z_simple_field_symbol.

************************************************************************
* Report Name  : Z_SIMPLE_FIELD_SYMBOL                                                 *
* Report Title : <description>                                         *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 99/99/9999 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.# | Date:99.99.99 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************

FIELD-SYMBOLS <fs> TYPE ANY.
DATA: city(30) TYPE c,
      zipcode(5) TYPE n.

ASSIGN city TO <fs>.
<fs> = 'cologne'.

ASSIGN zipcode TO <fs>.
<fs> = '50931'.

WRITE: / zipcode, city.



*&---------------------------------------------------------------------*
*& Report  Z_GENERIC_FIELD_SYMBOL
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  z_generic_field_symbol.

************************************************************************
* Report Name  : Z_GENERIC_FIELD_SYMBOL                                                 *
* Report Title : <description>                                         *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 99/99/9999 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.# | Date:99.99.99 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************

TYPES: BEGIN OF t_address,
        street(30) TYPE c,
        no(5) TYPE n,
       END OF t_address.

DATA: wa_address TYPE t_address,
      address_tab TYPE HASHED TABLE
      OF t_address
      WITH UNIQUE KEY no,
      key(4) TYPE c VALUE 'NO'.
FIELD-SYMBOLS <fs> TYPE ANY TABLE.

ASSIGN address_tab TO <fs>.

* Syntaxfehler
*READ TABLE <fs> WITH TABLE KEY no = '1' INTO wa_address.

*So gehts
READ TABLE <fs> WITH TABLE KEY (key) = '1' INTO wa_address.



*&---------------------------------------------------------------------*
*& Report  Z_FIELD_SYMBOLS_FOR_SECTIONS
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  z_field_symbols_for_sections.

************************************************************************
* Report Name  : Z_FIELD_SYMBOLS_FOR_SECTIONS                          *
* Report Title : Statisches ASSIGN mit Teilfeldadressierung           *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 01/24/2019 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  : ABAP Objects 2. AUfl. S.199               *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.1 | Date:01.24.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************

DATA: BEGIN OF address,
          street(20)  TYPE c VALUE 'Woodway',
          no(4)       TYPE c VALUE '1234',
          zip(5)      TYPE c VALUE '98765',
          city(20)    TYPE c VALUE 'Horse Village',
      END OF address.

FIELD-SYMBOLS: <street_no> TYPE c,
               <zip_city> TYPE c.

ASSIGN: address(24) TO <street_no>,
        address+24(25) TO <zip_city>.

WRITE: / <street_no>,
       / <zip_city>.




*&---------------------------------------------------------------------*
*& Report  Z_DYNAMIC_ACCESS_TO_COMPONENTS
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  z_dynamic_access_to_components.

************************************************************************
* Report Name  : Z_DYNAMIC_ACCESS_TO_COMPONENTS                       *
* Report Title : Strukturen komponentenweise zuweisen                 *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 01/24/2019 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  : ABAP Objects 2. AUfl. S.201               *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.1 | Date:01.24.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************

DATA: wa_spfli TYPE spfli.

SELECT SINGLE *
  FROM spfli
  INTO wa_spfli.

PERFORM write_any_line USING wa_spfli.

*&---------------------------------------------------------------------*
*&      Form  write_any_line
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->U_LINE     text
*----------------------------------------------------------------------*
FORM write_any_line USING u_line TYPE any.
  FIELD-SYMBOLS: <fs_component> TYPE ANY.
  DO.
    ASSIGN COMPONENT sy-index
    OF STRUCTURE u_line TO <fs_component>.
    IF sy-subrc <> 0.
      EXIT.
    ENDIF.
    WRITE / <fs_component>.
  ENDDO.
ENDFORM.                    "







*&---------------------------------------------------------------------*
*& Report  Z_FIELD_SYMBOLS_CASTING
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  z_field_symbols_casting.

************************************************************************
* Report Name  : Z_FIELD_SYMBOLS_CASTING                                                 *
* Report Title : Casting mit impliziter Typangabe                     *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 01/24/2019 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  : ABAP Objects 2. AUfl. S.202               *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.1 | Date:01.24.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************

TYPES: BEGIN OF t_date,
  year(4) TYPE n,
  month(2) TYPE n,
  day(2) TYPE n,
  END OF t_date.

FIELD-SYMBOLS <fs> TYPE t_date.
ASSIGN sy-datum TO <fs> CASTING.
WRITE: / sy-datum,
       / <fs>-year, / <fs>-month, / <fs>-day.





*&---------------------------------------------------------------------*
*& Report  Z_FIELD_SYMBOLS_CASTING_TYPE
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  z_field_symbols_casting_type.

************************************************************************
* Report Name  : Z_FIELD_SYMBOLS_CASTING_TYPE                                                 *
* Report Title : Casting mit expliziter Typangabe                     *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 01/24/2019 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  : ABAP Objects 2. AUfl. S.204               *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.1 | Date:01.24.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************


TYPES: BEGIN OF t_date,
          year(4) TYPE n,
          month(2) TYPE n,
          day(2) TYPE n,
       END OF t_date.

FIELD-SYMBOLS: <fs> TYPE ANY,
              <f> TYPE n.

ASSIGN sy-datum TO <fs> CASTING TYPE t_date.

WRITE: / sy-datum.
DO.
  ASSIGN COMPONENT sy-index OF STRUCTURE <fs> TO <f>.
  IF sy-subrc <> 0.
    EXIT.
  ENDIF.
  WRITE / <f>.
ENDDO.





*&---------------------------------------------------------------------*
*& Report  Z_DATA_REFERENCE
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  z_data_reference.

************************************************************************
* Report Name  : Z_DATA_REFERENCE                                                 *
* Report Title : Datenreferenzen       *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 01/24/2019 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  : ABAP Objects 2. AUfl. S.207               *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.1 | Date:01.24.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************

DATA: dref TYPE REF TO data,
      dref_int TYPE REF TO data,
      dref_pack TYPE REF TO data,
            int TYPE i VALUE 5,
            pack TYPE p DECIMALS 2 VALUE '123.45'.
FIELD-SYMBOLS <fs> TYPE ANY.

GET REFERENCE OF int INTO dref.
dref_int = dref.
ASSIGN dref_int->* TO <fs>.
WRITE / <fs>.

GET REFERENCE OF pack INTO dref.
dref_pack = dref.
ASSIGN dref_pack->* TO <fs>.
WRITE / <fs>.




*&---------------------------------------------------------------------*
*& Report  Z_DYNAMIC_DATA_OBJECTS
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  z_dynamic_data_objects.

************************************************************************
* Report Name  : Z_DYNAMIC_DATA_OBJECTS                               *
* Report Title : Beispiel zu dynamischen Datenobjecten    *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 01/24/2019 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  : ABAP Objects 2. AUfl. S.208               *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.1 | Date:01.24.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************

TYPES: BEGIN OF t_item,
          content TYPE i,
          next TYPE REF TO data,
        END OF t_item.

DATA: dref_start TYPE REF TO data,
      dref_new TYPE REF TO data.

FIELD-SYMBOLS <fs_new> TYPE t_item.

* Create dynamic list

DO 10 TIMES.
  CREATE DATA dref_new TYPE t_item.

  ASSIGN dref_new->* TO <fs_new>.
  <fs_new>-content = sy-index ** 2.
  IF sy-index = 1.
    dref_start = dref_new.
  ENDIF.
  PERFORM append_item USING dref_start
                            dref_new.
ENDDO.

PERFORM show_list_content USING dref_start.

* Subroutines

FORM append_item USING dref_start TYPE REF TO data
                       dref_new TYPE REF TO data.
  FIELD-SYMBOLS <fs_curitem> TYPE t_item.
  DATA dref_cur TYPE REF TO data.
  IF dref_start = dref_new.
    EXIT.
  ENDIF.
  dref_cur = dref_start.
  ASSIGN dref_cur->* TO <fs_curitem>.
  WHILE NOT <fs_curitem>-next IS INITIAL.
    dref_cur = <fs_curitem>-next.
    ASSIGN dref_cur->* TO <fs_curitem>.
  ENDWHILE.
  <fs_curitem>-next = dref_new.
ENDFORM.                    "append_item

*&---------------------------------------------------------------------*
*&      Form  show_list_content
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->DREF_START     text
*      -->FIELD-SYMBOLS  text
*      --><FS_CURITEM>   text
*----------------------------------------------------------------------*
FORM show_list_content USING dref_start TYPE REF TO data.
  FIELD-SYMBOLS <fs_curitem> TYPE t_item.
  DATA dref_cur TYPE REF TO data.
  dref_cur = dref_start.
  WHILE NOT dref_cur IS INITIAL.
    ASSIGN dref_cur->* TO <fs_curitem>.
    WRITE: / <fs_curitem>-content.
    dref_cur = <fs_curitem>-next.
  ENDWHILE.
ENDFORM.                    "show_list_content



*&---------------------------------------------------------------------*
*& Report  Z_ITAB_ARRAY
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  z_itab_array.

************************************************************************
* Report Name  : Z_ITAB_ARRAY                                         *
* Report Title : Zahlenliste in einer internen Tabelle      *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 01/24/2019 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  : ABAP Objects 2. AUfl. S.212               *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.1 | Date:01.24.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************

DATA: number TYPE i,
      array TYPE STANDARD TABLE
      OF i
      WITH KEY table_line.

DO 10 TIMES.
  number = sy-index.
  APPEND number TO array.
ENDDO.

LOOP AT array INTO number.
  WRITE / number.
ENDLOOP.


*&---------------------------------------------------------------------*
*& Report  Z_ITAB_EXAMPLE
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  z_itab_example.

************************************************************************
* Report Name  : Z_ITAB_EXAMPLE                                                 *
* Report Title : Definitionen Interner Tabellen                *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 01/24/2019 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  : ABAP Objects 2. AUfl. S.217               *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.1 | Date:01.24.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************

TYPES: BEGIN OF t_address,
        street(20) TYPE c ,
        city(20) TYPE c,
       END OF t_address.

TYPES  t_address_tab TYPE STANDARD TABLE
                      OF t_address
                      WITH NON-UNIQUE KEY city.

DATA: BEGIN OF company,
        name(20) TYPE c,
        addresses TYPE t_address_tab,
      END OF company.
DATA company_tab LIKE HASHED TABLE
        OF company
        WITH UNIQUE KEY name.
DATA company_sorted_tab LIKE SORTED TABLE
            OF company
            WITH UNIQUE KEY name.



*&---------------------------------------------------------------------*
*& Report  Z_ITAB_EXAMPLE
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  z_itab_example.

************************************************************************
* Report Name  : Z_ITAB_EXAMPLE                                                 *
* Report Title : Definitionen Interner Tabellen                *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 01/24/2019 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  : ABAP Objects 2. AUfl. S.217               *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.1 | Date:01.24.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************

TYPES: BEGIN OF t_address,
        street(20) TYPE c ,
        city(20) TYPE c,
       END OF t_address.

TYPES  t_address_tab TYPE STANDARD TABLE
                      OF t_address
                      WITH NON-UNIQUE KEY city.

DATA: BEGIN OF company,
        name(20) TYPE c,
        addresses TYPE t_address_tab,
      END OF company.
DATA company_tab LIKE HASHED TABLE
        OF company
        WITH UNIQUE KEY name.
DATA company_sorted_tab LIKE SORTED TABLE
            OF company
            WITH UNIQUE KEY name.
DATA address TYPE t_address.
DATA   idx     TYPE sy-tabix.

FIELD-SYMBOLS <fs> LIKE company.
* Text output

* internal table filling
company-name        = 'Racing Bikes Inc.'.
address-street      = 'Fifth Avenue'.
address-city        = 'New York'.
APPEND address TO company-addresses.
address-street      = 'Second Street'.
address-city        = 'Boston'.
APPEND address TO company-addresses.
INSERT company INTO TABLE company_tab.
CLEAR company.
company-name        = 'Chocolatiers Suisse'.
address-street      = 'Avenue des Forets'.
address-city        = 'Geneve'.
APPEND address TO company-addresses.
address-street      = 'Kleine Bachgasse'.
address-city        = 'Basel'.
APPEND address TO company-addresses.
address-street      = 'Piazza di Lago'.
address-city        = 'Como'.
APPEND address TO company-addresses.
INSERT company INTO TABLE company_tab.
*Internal Tabel reading
READ TABLE company_tab
  WITH TABLE KEY name = 'Racing Bikes Inc.'
 ASSIGNING <fs>.
WRITE <fs>-name.

LOOP AT <fs>-addresses INTO address.

  WRITE: / sy-tabix       ,
          address-street  ,
          address-city    .
ENDLOOP.
uline.

*mod int Tables
address-street = 'Rue des Montagnes'.
address-city = 'Geneve'.
READ TABLE company_tab WITH TABLE KEY
name = 'Chocolatiers Suisse' INTO company.
READ TABLE company-addresses TRANSPORTING NO FIELDS
WITH TABLE KEY city = address-city.
idx = sy-tabix.
MODIFY company-addresses FROM address INDEX idx.
MODIFY TABLE company_tab FROM company.
* Moving and sorting Table
company_sorted_tab = company_tab.
LOOP AT company_sorted_tab INTO company.
  WRITE company-name.
  SORT company-addresses.
  LOOP AT company-addresses INTO address.
    WRITE: /  sy-tabix,
            address-street ,
            address-city .
  ENDLOOP.
ENDLOOP.




*&---------------------------------------------------------------------*
*& Report  Z_EXTRACT
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  z_extract.

************************************************************************
* Report Name  : Z_EXTRACT                                                 *
* Report Title : Extractdatenbestand füllen und bearbeiten                *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 01/24/2019 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  : ABAP Objects 2. AUfl. S.217               *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.1 | Date:01.24.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************


DATA: f1 TYPE i,
      f2 TYPE i.

FIELD-GROUPS header.
INSERT f1 f2 INTO header.
DO 10 TIMES.
  f1 = sy-index.
  f2 = sy-index ** 2.
  EXTRACT header.
ENDDO.
SORT DESCENDING.
LOOP.
  WRITE: / f1, f2.
ENDLOOP.


*&---------------------------------------------------------------------*
*& Report  Z_DEMO_MATE_FUNKIONEN
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  z_demo_mate_funkionen.

************************************************************************
* Report Name  : Z_DEMO_MATE_FUNKIONEN                                                 *
* Report Title : Mathematische Funktionen               *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 01/24/2019 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  : ABAP Objects 2. AUfl. S.170               *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.1 | Date:01.24.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************


DATA: result(20) TYPE c,
      float TYPE f VALUE '2.5E00'.
result = TRUNC( float ).

WRITE result.


DATA: result1(20) TYPE c,
      int TYPE i VALUE 2.
result1 = SQRT( int ).

WRITE result1.






*&---------------------------------------------------------------------*
*& Report  Z_SIMPLE_FORMS
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  z_simple_forms.

************************************************************************
* Report Name  : Z_SIMPLE_FORMS                                                 *
* Report Title : Einface Unterprogramme               *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 01/24/2019 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  : ABAP Objects 2. AUfl. S.170               *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.1 | Date:01.24.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************


START-OF-SELECTION.

  PERFORM write_one.
  PERFORM write_two.
  PERFORM write_three.
  PERFORM write_one_two_three.

*&---------------------------------------------------------------------*
*&      Form  write_one
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM write_one.
  WRITE / 'One'.
ENDFORM.                    "write_one

*&---------------------------------------------------------------------*
*&      Form  write_two
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM write_two.
  WRITE / 'Two'.
ENDFORM.                    "write_two

*&---------------------------------------------------------------------*
*&      Form  write_three
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM write_three.
  WRITE / 'Three'.
ENDFORM.                    "write_three

*&---------------------------------------------------------------------*
*&      Form  write_one_two_tree
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM write_one_two_three.
  PERFORM write_one.
  PERFORM write_two.
  PERFORM write_three.
ENDFORM.                    "write_one_two_tree


*&---------------------------------------------------------------------*
*& Report  Z_PERFORM
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  z_perform.

************************************************************************
* Report Name  : Z_PERFORM                                                 *
* Report Title : Aufruf von Unterprogrammen               *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 01/24/2019 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  : ABAP Objects 2. AUfl. S.170               *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.1 | Date:01.24.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************


PARAMETERS: p_carrid TYPE sflight-carrid,
            p_connid TYPE sflight-connid.

TYPES t_sflight_tab TYPE STANDARD TABLE OF sflight
                  WITH KEY carrid connid fldate.

DATA sflight_tab TYPE t_sflight_tab.

START-OF-SELECTION.
  PERFORM select_data USING p_carrid
                            p_connid
                    CHANGING sflight_tab.

  PERFORM write_data USING sflight_tab.
*&---------------------------------------------------------------------*
*&      Form  select_data
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->U_CARRID       text
*      -->U_CONNID       text
*      -->C_SFLIGHT_TAB  text
*----------------------------------------------------------------------*
FORM select_data USING u_carrid LIKE p_carrid
                       u_connid LIKE p_connid
  CHANGING c_sflight_tab TYPE t_sflight_tab.

  SELECT *
    FROM sflight
    INTO TABLE c_sflight_tab
    WHERE carrid = u_carrid AND
          connid = u_connid.
ENDFORM.                    "select_data

*&---------------------------------------------------------------------*
*&      Form  write_data
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->U_SFLIGHT_TAB  text
*----------------------------------------------------------------------*
FORM write_data USING u_sflight_tab TYPE t_sflight_tab.
  FIELD-SYMBOLS <fs_sflight> LIKE LINE OF u_sflight_tab.
  LOOP AT u_sflight_tab ASSIGNING <fs_sflight>.
    WRITE: / <fs_sflight>-carrid,
    <fs_sflight>-connid,
    <fs_sflight>-fldate.
  ENDLOOP.
ENDFORM.                    "select_data


FUNCTION z_select_sflight.
*"----------------------------------------------------------------------
*"*"Lokale Schnittstelle:
*"  IMPORTING
*"     REFERENCE(I_CARRID) TYPE  SFLIGHT-CARRID
*"     REFERENCE(I_CONNID) TYPE  SFLIGHT-CONNID
*"  EXPORTING
*"     REFERENCE(E_SFLIGHT_TAB) TYPE  Z_SFLIGHT_TAB
*"----------------------------------------------------------------------
*ABAP ObJEcTs 2. Aufl. S. 265

  SELECT *
    FROM sflight
    INTO TABLE e_sflight_tab
    WHERE carrid = i_carrid AND
    connid = i_connid.

  IF sy-subrc = 4.
    RAISE nothing_found.
  ENDIF.

ENDFUNCTION.


FUNCTION z_write_sflight.
*"----------------------------------------------------------------------
*"*"Lokale Schnittstelle:
*"  IMPORTING
*"     REFERENCE(I_SFLIGHT_TAB) TYPE  Z_SFLIGHT_TAB
*"----------------------------------------------------------------------
*ABAP ObJEcTs 2. Aufl. S. 267

  FIELD-SYMBOLS <fs_sflight> LIKE LINE OF i_sflight_tab.

  LOOP AT i_sflight_tab ASSIGNING <fs_sflight>.
    WRITE: / <fs_sflight>-carrid,
             <fs_sflight>-connid,
             <fs_sflight>-fldate.
  ENDLOOP.


ENDFUNCTION.



*&---------------------------------------------------------------------*
*& Report  Z_CALL_FUNCTION_B
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  z_call_function_b.

************************************************************************
* Report Name  : Z_CALL_FUNCTION_B                                                 *
* Report Title : Aufrufen von Funktionsbausteinen      *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 01/24/2019 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  : ABAP Objects 2. AUfl. S.269               *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.1 | Date:01.24.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************

PARAMETERS: p_carrid TYPE spfli-carrid,
            p_connid TYPE sflight-connid.
DATA sflight_tab TYPE z_sflight_tab.

START-OF-SELECTION.
  CALL FUNCTION 'Z_SELECT_SFLIGHT'
    EXPORTING
      i_carrid      = p_carrid
      i_connid      = p_connid
    IMPORTING
      e_sflight_tab = sflight_tab
    EXCEPTIONS
      nothing_found = 1
      OTHERS        = 2.

  IF sy-subrc = 0.
    CALL FUNCTION 'Z_WRITE_SFLIGHT'
      EXPORTING
        i_sflight_tab = sflight_tab.

  ELSE.
    WRITE 'No data'.
  ENDIF.



*&---------------------------------------------------------------------*
*& Report  Z_INCLUDING_AN_INCLUDE
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  z_including_an_include.

************************************************************************
* Report Name  : Z_INCLUDING_AN_INCLUDE                                                 *
* Report Title : Einbinden eines Include-Programmes               *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 01/25/2019 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  : ABAP Objects 2. AUfl. S.271               *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.1 | Date:01.25.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************

WRITE: / 'Ihr Benutzername lautet:'.

INCLUDE z_include_demo_a.

*&---------------------------------------------------------------------*
*& Report  Z_USING_MAKROS
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  z_using_makros.

************************************************************************
* Report Name  : Z_USING_MAKROS                                                 *
* Report Title : Verwenden von Makros               *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 01/25/2019 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  : ABAP Objects 2. AUfl. S.271               *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.1 | Date:01.25.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************


CONSTANTS: pi TYPE f VALUE '3.14159265'.
DATA dimension TYPE f.

DEFINE shape_dimension.
  case &1.
    when 'Square'.
      dimension = &2 * &2.
    when 'Circle'.
      dimension = &2 * &2 * pi.
  endcase.
END-OF-DEFINITION.

*Prozessing Blocks

START-OF-SELECTION.
  shape_dimension 'Square' 10.
  WRITE: / 'Fläche Quadrat:', dimension.
  shape_dimension  'Circle' 10.
  WRITE: / 'Fläche Kreis:', dimension.



*&---------------------------------------------------------------------*
*& Report  Z_PERFORM_GLOBAL
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  z_perform_global.

************************************************************************
* Report Name  : Z_PERFORM_GLOBAL                                                 *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 01/25/2019 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  : ABAP Objects 2.Aufl. S. 279                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.# | Date:01.25.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************

PARAMETERS: p_carrid TYPE sflight-carrid,
            p_connid TYPE sflight-connid.

TYPES t_sflight_tab TYPE STANDARD TABLE OF sflight
                  WITH KEY carrid connid fldate.

DATA sflight_tab TYPE t_sflight_tab.

START-OF-SELECTION.
  PERFORM select_data.
  PERFORM write_data.

*&---------------------------------------------------------------------*
*&      Form  select_data
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM select_data.

  SELECT *
    FROM sflight
    INTO TABLE sflight_tab
    WHERE carrid = p_carrid AND
          connid = p_connid.
ENDFORM.                    "select_data


*&---------------------------------------------------------------------*
*&      Form  write_data
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
FORM write_data.
  FIELD-SYMBOLS <fs_sflight> LIKE LINE OF sflight_tab.
  LOOP AT sflight_tab ASSIGNING <fs_sflight>.
    WRITE: / <fs_sflight>-carrid,
             <fs_sflight>-connid,
             <fs_sflight>-fldate.
  ENDLOOP.
ENDFORM.                    "select_data






*&---------------------------------------------------------------------*
*& Report  Z_CLASS_METHODS
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  z_class_methods.

************************************************************************
* Report Name  : Z_CLASS_METHODS                                       *
* Report Title : Einfache Methodendeklaration und -implementierung     *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 01/25/2019 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  : ABAP Objects 2.Aufl. S. 291                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.# | Date:01.25.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************

CLASS attributes_and_methods DEFINITION.
  PUBLIC SECTION.
    METHODS:
    set_object_value
    IMPORTING value(i_object_value) TYPE i,
      get_object_value
      EXPORTING value(e_object_value) TYPE i.
  PRIVATE SECTION.
    DATA object_value TYPE i.
    CLASS-DATA object_count TYPE i.
ENDCLASS.                    "attributes_and_methods DEFINITION

*----------------------------------------------------------------------*
*       CLASS attributes_and_methods IMPLEMENTATION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS attributes_and_methods IMPLEMENTATION.
  METHOD set_object_value.
    object_value = i_object_value.
  ENDMETHOD.                    "set_object_value
  METHOD get_object_value.
    e_object_value = object_value.
  ENDMETHOD.                    "get_object_value
ENDCLASS. "attributes_and_methods IMPLEMENTATION




*&---------------------------------------------------------------------*
*& Report  Z_FIRST_OBJECT
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  z_first_object.

************************************************************************
* Report Name  : Z_FIRST_OBJECT                                                 *
* Report Title : <description>                                         *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 01/25/2019 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  : ABAP Objects 2.Aufl. S. 292                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.# | Date:01.25.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************

CLASS vehicle DEFINITION.
  PUBLIC SECTION.
    METHODS: accelerate,
             show_speed.
  PRIVATE SECTION.
    DATA speed TYPE i VALUE 0.
ENDCLASS.                    "vehicle DEFINITION

*----------------------------------------------------------------------*
*       CLASS vehicle IMPLEMENTATION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS vehicle IMPLEMENTATION.
  METHOD accelerate.
    speed = speed + 1.
  ENDMETHOD.                    "accelerate
  METHOD show_speed.
    WRITE speed.
  ENDMETHOD.                    "show_speed
ENDCLASS.                    "vehicle IMPLEMENTATION

DATA ov1 TYPE REF TO vehicle.

START-OF-SELECTION.
  CREATE OBJECT ov1.
  CALL METHOD ov1->accelerate.
  CALL METHOD ov1->accelerate.
  CALL METHOD ov1->show_speed.




*&---------------------------------------------------------------------*
*& Report  Z_SERVAL_REFERENCES
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  Z_SERVAL_REFERENCES.

************************************************************************
* Report Name  : Z_SERVAL_REFERENCES                                                 *
* Report Title : <description>                                         *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 01/25/2019 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  : ABAP Objects 2.Aufl. S. 292                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.# | Date:01.25.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************

CLASS vehicle DEFINITION.
  PUBLIC SECTION.
    METHODS: accelerate,
             show_speed.
  PRIVATE SECTION.
    DATA speed TYPE i VALUE 0.
ENDCLASS.                    "vehicle DEFINITION

*----------------------------------------------------------------------*
*       CLASS vehicle IMPLEMENTATION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS vehicle IMPLEMENTATION.
  METHOD accelerate.
    speed = speed + 1.
  ENDMETHOD.                    "accelerate
  METHOD show_speed.
    WRITE speed.
  ENDMETHOD.                    "show_speed
ENDCLASS.                    "vehicle IMPLEMENTATION

DATA: ov1 TYPE REF TO vehicle,
     ov2 LIKE ov1.

START-OF-SELECTION.
  CREATE OBJECT ov1.
  ov2 = ov1.
  CALL METHOD ov2->accelerate.
  CALL METHOD ov2->accelerate.
  CALL METHOD ov2->show_speed.




*&---------------------------------------------------------------------*
*& Report  Z_SELV_REFERENCE
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  z_selv_reference.

************************************************************************
* Report Name  : Z_SELV_REFERENCE                                     *
* Report Title : Verwendungsbeispiel für die Selbstreferenz           *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 01/25/2019 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  :  ABAP Objects 2. Aufl. S. 297                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.1 | Date:01.25.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************

CLASS client DEFINITION.
  PUBLIC SECTION.
    DATA name(10) TYPE c VALUE 'Master' READ-ONLY.
    METHODS create_server.
ENDCLASS.                    "client DEFINITION

*Class definition
CLASS server DEFINITION.
  PUBLIC SECTION.
    METHODS acknowledge
    IMPORTING creator TYPE REF TO client.
  PRIVATE SECTION.
    DATA name(10) TYPE c VALUE 'Servant'.
ENDCLASS.                    "server DEFINITION


*class implementation
CLASS client IMPLEMENTATION.
  METHOD create_server.
    DATA server_ref TYPE REF TO server.
    CREATE OBJECT server_ref.
    CALL METHOD server_ref->acknowledge
      EXPORTING
        creator = me.
  ENDMETHOD.                    "create_server
ENDCLASS.                    "client IMPLEMENTATION


*----------------------------------------------------------------------*
*       CLASS server IMPLEMENTATION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS server IMPLEMENTATION.
  METHOD acknowledge.
    DATA name TYPE string.
    name = creator->name.
    WRITE: me->name, 'created by', name.
  ENDMETHOD.                    "acknowledge
ENDCLASS.                    "server IMPLEMENTATION


* Global Data

DATA client_ref TYPE REF TO client.

*Classical Processing Block

START-OF-SELECTION.
  CREATE OBJECT client_ref.
  CALL METHOD client_ref->create_server.


*&---------------------------------------------------------------------*
*& Report  Z_VEHICLE_A
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

*REPORT  z_vehicle_a.

************************************************************************
* Report Name  : Z_VEHICLE_A                                                 *
* Report Title : <description>                                         *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 01/25/2019 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  : ABAP Objects 2.Aufl. S.                 *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.# | Date:01.25.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************

FUNCTION-POOL z_vehicle.

DATA speed TYPE i VALUE 0.

FUNCTION accelerate.
  speed = speed + 1.
ENDFUNCTION.

FUNCTION show_speed.
  WRITE speed.
ENDFUNCTION.




*&---------------------------------------------------------------------*
*& Report  z_serval_objects
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  z_serval_objects.

************************************************************************
* Report Name  : Z_SERVAL_OBJECTS                                                 *
* Report Title : <description>                                         *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 01/25/2019 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  : ABAP Objects 2.Aufl. S. 301                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.# | Date:01.25.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************

CLASS vehicle DEFINITION.
  PUBLIC SECTION.
    METHODS: accelerate,
             show_speed.
  PRIVATE SECTION.
    DATA speed TYPE i VALUE 0.
ENDCLASS.                    "vehicle DEFINITION

*----------------------------------------------------------------------*
*       CLASS vehicle IMPLEMENTATION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS vehicle IMPLEMENTATION.
  METHOD accelerate.
    speed = speed + 1.
  ENDMETHOD.                    "accelerate
  METHOD show_speed.
    WRITE speed.
  ENDMETHOD.                    "show_speed
ENDCLASS.                    "vehicle IMPLEMENTATION

DATA: ov TYPE REF TO vehicle,
      ov_tab TYPE TABLE OF REF TO vehicle.

START-OF-SELECTION.
  DO 5 TIMES.
    CREATE OBJECT ov.
    APPEND ov TO ov_tab.
  ENDDO.
  LOOP AT ov_tab INTO ov.
    DO sy-tabix TIMES.
      CALL METHOD ov->accelerate.
    ENDDO.
    CALL METHOD ov->show_speed.
  ENDLOOP.


*&---------------------------------------------------------------------*
*& Report  Z_OBJECT_OF_FUNCTION_POOL
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  Z_OBJECT_OF_FUNCTION_POOL.

************************************************************************
* Report Name  : Z_OBJECT_OF_FUNCTION_POOL                                                 *
* Report Title : <description>                                         *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 01/25/2019 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  : ABAP Objects 2. AUfl. S.300              *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.1 | Date:01.24.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************


START-OF-SELECTION.
* Vehicle 1
call function 'ACCELERATE'.
call function 'ACCELERATE'.
call function 'SHOW_SPEED'.
*Vehicle 2

* Vehicle 3

*&---------------------------------------------------------------------*
*& Report  Z_GARBAGE_COLLECTOR
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  Z_GARBAGE_COLLECTOR.

************************************************************************
* Report Name  : Z_GARBAGE_COLLECTOR                                   *
* Report Title : Garbage Collector aktivieren                         *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 01/25/2019 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  :  ABAP Objects 2. Aufl. S. 304               *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.1 | Date:01.25.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************

CLASS vehicle DEFINITION.
  PUBLIC SECTION.
    METHODS: accelerate,
             show_speed.
  PRIVATE SECTION.
    DATA speed TYPE i VALUE 0.
ENDCLASS.                    "vehicle DEFINITION

*----------------------------------------------------------------------*
*       CLASS vehicle IMPLEMENTATION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS vehicle IMPLEMENTATION.
  METHOD accelerate.
    speed = speed + 1.
  ENDMETHOD.                    "accelerate
  METHOD show_speed.
    WRITE speed.
  ENDMETHOD.                    "show_speed
ENDCLASS.                    "vehicle IMPLEMENTATION

* Global Data

      Data: ov1 type ref TO vehicle,
            ov2 like ov1.

* Classical Processing Blocks

START-OF-SELECTION.

CREATE OBJECT: ov1,
               ov2.

ov1 = ov2.
clear ov2.





*&---------------------------------------------------------------------*
*& Report  Z_FUNCTIONAL_METHOD
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  z_functional_method.

************************************************************************
* Report Name  : Z_FUNCTIONAL_METHOD                                                 *
* Report Title : Funktionale Methode                                         *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 01/25/2019 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  : ABAP Objects 2. AUfl. S.309               *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.1 | Date:01.25.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************

CLASS circle DEFINITION.
  PUBLIC SECTION.
    METHODS get_area IMPORTING value(i_radius) TYPE i
                     RETURNING value(r_size) TYPE f.
  PRIVATE SECTION.
    CONSTANTS pi TYPE f VALUE '3.14159265'.
ENDCLASS.                    "circle DEFINITION

*----------------------------------------------------------------------*
*       CLASS circle IMPLEMENTATION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS circle IMPLEMENTATION.
  METHOD get_area.
    r_size = i_radius ** 2 * pi.
  ENDMETHOD.                    "get_area
ENDCLASS.                    "circle IMPLEMENTATION

PARAMETERS radius TYPE i.

DATA: o_circle TYPE REF TO circle,
      area TYPE f.

START-OF-SELECTION.
  CREATE OBJECT o_circle.

  CALL METHOD o_circle->get_area
    EXPORTING
      i_radius = radius
    RECEIVING
      r_size   = area.
  WRITE: / area.

  area = o_circle->get_area( radius ).
  WRITE: / area.




*&---------------------------------------------------------------------*
*& Report  Z_DYNAMIC_METHOD_CALL
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  z_dynamic_method_call.

************************************************************************
* Report Name  : Z_DYNAMIC_METHOD_CALL                                                 *
* Report Title : Dynamischer Methodenaufruf                                         *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 01/25/2019 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  : ABAP Objects 2. AUfl. S.269               *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.1 | Date:01.25.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************

CLASS table_content DEFINITION.
  PUBLIC SECTION.
    METHODS: get_spfli,
             get_sflight.
  PRIVATE SECTION.
    DATA: wa_spfli TYPE spfli,
          wa_sflight TYPE sflight.
ENDCLASS.                    "table_content DEFINITION

*----------------------------------------------------------------------*
*       CLASS table_content IMPLEMENTATION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS table_content IMPLEMENTATION.
  METHOD get_spfli.
    SELECT * FROM spfli INTO wa_spfli.
      WRITE: / wa_spfli-carrid,
               wa_spfli-connid.
    ENDSELECT.
  ENDMETHOD.                    "get_spfli
  METHOD get_sflight.
    SELECT * FROM sflight INTO wa_sflight.
      WRITE: / wa_sflight-carrid,
               wa_sflight-connid,
               wa_sflight-fldate.
    ENDSELECT.
  ENDMETHOD.                    "get_sflight
ENDCLASS.                    "table_content IMPLEMENTATION

PARAMETERS table(20) TYPE c.
DATA  o_table TYPE REF TO table_content.

START-OF-SELECTION.
  CREATE OBJECT o_table.
  CONCATENATE 'GET_' table INTO table.
  CATCH SYSTEM-EXCEPTIONS dyn_call_meth_not_found = 4.
    CALL METHOD o_table->(table).
  ENDCATCH.
  IF sy-subrc = 4.
    WRITE 'Wrong Method Name!'.
  ENDIF.


*&---------------------------------------------------------------------*
*& Report  Z_SELECT_DISPLAY_SFLIGHT
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  z_select_display_sflight.

************************************************************************
* Report Name  : Z_SELECT_DISPLAY_SFLIGHT                                                 *
* Report Title : <description>                                         *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 99/99/9999 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.# | Date:99.99.99 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************

CLASS select_display_sflight DEFINITION.
  PUBLIC SECTION.
    CLASS-METHODS class_constructor.
    METHODS: constructor
    IMPORTING i_carrid TYPE sflight-carrid
              i_connid TYPE sflight-connid
              EXCEPTIONS nothing_found,
                         display_sflight.
  PRIVATE SECTION.
    CLASS-DATA list TYPE REF TO cl_gui_alv_grid.
    DATA sflight_tab TYPE z_sflight_tab.
ENDCLASS.                    "SELECT_display_sflight DEFINITION

*----------------------------------------------------------------------*
*       CLASS select_display_sflight IMPLEMENTATION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS select_display_sflight IMPLEMENTATION.
  METHOD class_constructor.
    CREATE OBJECT list
    EXPORTING i_parent = cl_gui_container=>screen0.
  ENDMETHOD.                    "class_constructor
  METHOD constructor.
    SELECT *
      FROM sflight
      INTO TABLE sflight_tab
      WHERE carrid = i_carrid AND
      connid = i_connid.
    IF sy-subrc = 4.
      RAISE nothing_found.
    ENDIF.
  ENDMETHOD.                    "constructor
  METHOD display_sflight.
    CALL METHOD list->set_table_for_first_display
      EXPORTING
        i_structure_name = 'SFLIGHT'
      CHANGING
        it_outtab        = sflight_tab.
    CALL SCREEN 100.
  ENDMETHOD.                    "display_sflight
ENDCLASS.                    "select_display_sflight IMPLEMENTATION

SELECTION-SCREEN BEGIN OF SCREEN 500.
PARAMETERS: p_carrid TYPE sflight-carrid,
            p_connid TYPE sflight-connid.
SELECTION-SCREEN END OF SCREEN 500.

DATA: BEGIN OF ref_tab_line,
        carrid  TYPE sflight-carrid,
        connid  TYPE sflight-connid,
        oref    TYPE REF TO select_display_sflight,
      END OF ref_tab_line,
  ref_tab LIKE SORTED TABLE OF ref_tab_line
  WITH UNIQUE KEY carrid connid.

      START-OF-SELECTION.
  DO.
    CALL SELECTION-SCREEN 500 STARTING AT 10 10.
    IF sy-subrc <> 0.
      LEAVE PROGRAM.
    ENDIF.
    ref_tab_line-carrid = p_carrid.
    ref_tab_line-connid = p_connid.
    READ TABLE ref_tab INTO ref_tab_line
                FROM ref_tab_line.
    IF sy-subrc <> 0.
      CREATE OBJECT ref_tab_line-oref
      EXPORTING i_carrid = p_carrid
                i_connid = p_connid
                EXCEPTIONS nothing_found = 4.
      IF sy-subrc = 4.
        MESSAGE i888(sabapdocu) WITH 'No data'.
        CONTINUE.
      ELSE.
        INSERT ref_tab_line INTO TABLE ref_tab.
      ENDIF.
    ENDIF.
    CALL METHOD ref_tab_line-oref->display_sflight.
  ENDDO.



*&---------------------------------------------------------------------*
*& Report  Z_SIMPLE_INTERITANCE
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  z_simple_interitance.

************************************************************************
* Report Name  : Z_SIMPLE_INTERITANCE                                                 *
* Report Title : Einfaches Beispiel zur Vererbung                                        *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 01/25/2019 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  : ABAP Objects 2.Aufl. S. 325                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.# | Date:01.25.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************

CLASS vehicle DEFINITION INHERITING FROM object.
  PUBLIC SECTION.
    METHODS: accelerate,
             write_status.
  PROTECTED SECTION.
    DATA speed TYPE i.
ENDCLASS.                    "vehicle DEFINITION

*----------------------------------------------------------------------*
*       CLASS plane DEFINITION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS plane DEFINITION INHERITING FROM vehicle.
  PUBLIC SECTION.
    METHODS rise.
  PROTECTED SECTION.
    DATA altitude TYPE i.
ENDCLASS.                    "plane DEFINITION

*----------------------------------------------------------------------*
*       CLASS ship DEFINITION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS ship DEFINITION INHERITING FROM vehicle.
ENDCLASS.                    "ship DEFINITION

*----------------------------------------------------------------------*
*       CLASS vehicle IMPLEMENTATION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS vehicle IMPLEMENTATION.
  METHOD accelerate.
    speed = speed + 1.
  ENDMETHOD.                    "accelerate
  METHOD write_status.
    WRITE: / 'Speed:', speed.
  ENDMETHOD.                    "write_status
ENDCLASS.                    "vehicle IMPLEMENTATION

*----------------------------------------------------------------------*
*       CLASS plane IMPLEMENTATION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS plane IMPLEMENTATION.
  METHOD rise.
    altitude = altitude + 1.
  ENDMETHOD.                    "rise
ENDCLASS.                    "plane IMPLEMENTATION


DATA: plane_ref TYPE REF TO plane,
      ship_ref TYPE REF TO ship.

START-OF-SELECTION.
  CREATE OBJECT: plane_ref,
                 ship_ref.
  CALL METHOD: plane_ref->accelerate,
               plane_ref->rise,
               plane_ref->write_status,
               ship_ref->accelerate,
               ship_ref->write_status.




*&---------------------------------------------------------------------*
*& Report  Z_METHOD_REDEFINITION_A
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  z_method_redefinition_a.

************************************************************************
* Report Name  : Z_METHOD_REDEFINITION_A                                                 *
* Report Title : <description>                                         *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 01/25/2019 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  : ABAP Objects 2.Aufl. S. 325                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.# | Date:01.25.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************

CLASS vehicle DEFINITION INHERITING FROM object.
  PUBLIC SECTION.
    METHODS: accelerate,
             write_status.
  PROTECTED SECTION.
    DATA speed TYPE i.
ENDCLASS.                    "vehicle DEFINITION

*----------------------------------------------------------------------*
*       CLASS plane DEFINITION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS plane DEFINITION INHERITING FROM vehicle.
  PUBLIC SECTION.
    METHODS: rise,
            write_status REDEFINITION.
  PROTECTED SECTION.
    DATA altitude TYPE i.
ENDCLASS.                    "plane DEFINITION

*----------------------------------------------------------------------*
*       CLASS ship DEFINITION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS ship DEFINITION INHERITING FROM vehicle.
  PUBLIC SECTION.
    METHODS write_status REDEFINITION.
ENDCLASS.                    "ship DEFINITION

*----------------------------------------------------------------------*
*       CLASS vehicle IMPLEMENTATION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS vehicle IMPLEMENTATION.
  METHOD accelerate.
    speed = speed + 1.
  ENDMETHOD.                    "accelerate
  METHOD write_status.
    WRITE: / 'Speed:', speed.
  ENDMETHOD.                    "write_status
ENDCLASS.                    "vehicle IMPLEMENTATION

*----------------------------------------------------------------------*
*       CLASS plane IMPLEMENTATION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS plane IMPLEMENTATION.
  METHOD rise.
    altitude = altitude + 1.
  ENDMETHOD.                    "rise
  METHOD write_status.
    WRITE / 'Plane:'.
    CALL METHOD super->write_status.
    WRITE: / 'Altitude:', altitude.
  ENDMETHOD.                    "write_status
ENDCLASS.                    "plane IMPLEMENTATION

*----------------------------------------------------------------------*
*       CLASS ship IMPLEMENTATION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS ship IMPLEMENTATION.
  METHOD write_status.
    WRITE: / 'Ship speed:', speed.
  ENDMETHOD.                    "write_status
ENDCLASS.                    "ship IMPLEMENTATION

DATA: plane_ref TYPE REF TO plane,
      ship_ref TYPE REF TO ship.

START-OF-SELECTION.
  CREATE OBJECT: plane_ref,
                 ship_ref.
  CALL METHOD: plane_ref->accelerate,
               plane_ref->rise,
               plane_ref->write_status,
               ship_ref->accelerate,
               ship_ref->write_status.




*&---------------------------------------------------------------------*
*& Report  Z_CLASS_ABSTRACT
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  z_class_abstract.

************************************************************************
* Report Name  : Z_CLASS_ABSTRACT                                   *
* Report Title : Abstracte Klassen und Methoden                       *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 01/25/2019 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  : ABAP Objects 2.Aufl. S. 331                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.# | Date:01.25.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************

CLASS vehicle DEFINITION ABSTRACT.
  PUBLIC SECTION.
    METHODS: accelerate,
             write_status abstract.
  PROTECTED SECTION.
    DATA speed TYPE i.
ENDCLASS.                    "vehicle DEFINITION

*----------------------------------------------------------------------*
*       CLASS plane DEFINITION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS plane DEFINITION INHERITING FROM vehicle.
  PUBLIC SECTION.
    METHODS: rise,
            write_status REDEFINITION.
  PROTECTED SECTION.
    DATA altitude TYPE i.
ENDCLASS.                    "plane DEFINITION

*----------------------------------------------------------------------*
*       CLASS ship DEFINITION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS ship DEFINITION INHERITING FROM vehicle.
  PUBLIC SECTION.
    METHODS write_status REDEFINITION.
ENDCLASS.                    "ship DEFINITION

*----------------------------------------------------------------------*
*       CLASS vehicle IMPLEMENTATION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS vehicle IMPLEMENTATION.
  METHOD accelerate.
    speed = speed + 1.
  ENDMETHOD.                    "accelerate
ENDCLASS.                    "vehicle IMPLEMENTATION

*----------------------------------------------------------------------*
*       CLASS plane IMPLEMENTATION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS plane IMPLEMENTATION.
  METHOD rise.
    altitude = altitude + 1.
  ENDMETHOD.                    "rise
  METHOD write_status.
    WRITE: / 'Plane speed:',  speed.
    WRITE: / 'Altitude:', altitude.
  ENDMETHOD.                    "write_status
ENDCLASS.                    "plane IMPLEMENTATION

*----------------------------------------------------------------------*
*       CLASS ship IMPLEMENTATION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS ship IMPLEMENTATION.
  METHOD write_status.
    WRITE: / 'Ship speed:', speed.
  ENDMETHOD.                    "write_status
ENDCLASS.                    "ship IMPLEMENTATION

DATA: plane_ref TYPE REF TO plane,
      ship_ref TYPE REF TO ship.

START-OF-SELECTION.
  CREATE OBJECT: plane_ref,
                 ship_ref.
  CALL METHOD: plane_ref->accelerate,
               plane_ref->rise,
               plane_ref->write_status,
               ship_ref->accelerate,
               ship_ref->write_status.




*&---------------------------------------------------------------------*
*& Report  Z_STATIC_ATTRIBUTES_A
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  z_static_attributes_a.

************************************************************************
* Report Name  : Z_STATIC_ATTRIBUTES_A                                                 *
* Report Title : <description>                                         *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 01/25/2019 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  : ABAP Objects 2. AUfl. S.334              *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.1 | Date:01.25.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************

CLASS c1 DEFINITION.
  PUBLIC SECTION.
    CLASS-DATA a1 TYPE string.
ENDCLASS.                    "c1 DEFINITION

*----------------------------------------------------------------------*
*       CLASS c2 DEFINITION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS c2 DEFINITION INHERITING FROM c1.

ENDCLASS.                    "c2 DEFINITION

START-OF-SELECTION.
  c2=>a1 = 'ABAP Objects'.
  WRITE c1=>a1.






*&---------------------------------------------------------------------*
*& Report  Z_INHERITANCE_CONSTRUCTORS
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  Z_INHERITANCE_CONSTRUCTORS.

************************************************************************
* Report Name  : Z_INHERITANCE_CONSTRUCTORS                                                 *
* Report Title : Instanzkonstruktoren in der Vererbung                                         *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 01/25/2019 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  : ABAP Objects 2. AUfl. S.338              *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.1 | Date:01.25.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************


CLASS vessel DEFINITION.
  PUBLIC SECTION.
    METHODS constructor IMPORTING i_name TYPE string.
  PROTECTED SECTION.
    DATA name TYPE string.
ENDCLASS.                    "vessel DEFINITION

*----------------------------------------------------------------------*
*       CLASS ship DEFINITION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS ship DEFINITION INHERITING FROM vessel.

ENDCLASS.                    "ship DEFINITION

*----------------------------------------------------------------------*
*       CLASS motorship DEFINITION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS motorship DEFINITION INHERITING FROM ship.
  PUBLIC SECTION.
    METHODS constructor IMPORTING i_name TYPE string
                            i_fuelamount TYPE i.
  PRIVATE SECTION.
    DATA fuelamount TYPE i.
ENDCLASS.                    "motorship DEFINITION

*----------------------------------------------------------------------*
*       CLASS vessel IMPLEMENTATION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS vessel IMPLEMENTATION.
  METHOD constructor.
    name = i_name.
  ENDMETHOD.                    "constructor
ENDCLASS.                    "vessel IMPLEMENTATION

*----------------------------------------------------------------------*
*       CLASS motorship IMPLEMENTATION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS motorship IMPLEMENTATION.
  METHOD constructor.
    call method super->constructor
    exporting i_name = i_name.
    fuelamount = i_fuelamount.
  ENDMETHOD.                    "constructor
ENDCLASS.                    "motorship IMPLEMENTATION

*----------------------------------------------------------------------*
*       CLASS demo IMPLEMENTATION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*

    DATA: o_vessel    TYPE REF TO vessel,
          o_ship      TYPE REF TO ship,
          o_motorship TYPE REF TO motorship.



START-OF-SELECTION.

  CREATE OBJECT:
    o_vessel    EXPORTING i_name        = 'Vincent',
    o_ship      EXPORTING i_name        = 'Mia',
    o_motorship EXPORTING i_name        = 'Jules'
                          i_fuelamount  = 12000.




*&---------------------------------------------------------------------*
*& Report  Z_WIDENING_CAST
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  z_widening_cast.

************************************************************************
* Report Name  : Z_WIDENING_CAST                                                 *
* Report Title : Widening Cast                                         *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 01/25/2019 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  : ABAP Objects 2. AUfl. S.348              *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.1 | Date:01.25.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************

CLASS vehicle DEFINITION.

ENDCLASS.                    "vehicle DEFINITION
*----------------------------------------------------------------------*
*       CLASS plane DEFINITION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS plane DEFINITION INHERITING FROM vehicle.

ENDCLASS.                    "plane DEFINITION

*----------------------------------------------------------------------*
*       CLASS ship DEFINITION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS ship DEFINITION INHERITING FROM vehicle.

ENDCLASS.                    "ship DEFINITION

*----------------------------------------------------------------------*
*       CLASS vehicle_handler DEFINITION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS vehicle_handler DEFINITION.
  PUBLIC SECTION.
    METHODS handle_vehicle
            IMPORTING i_ref TYPE REF TO object.
ENDCLASS.                    "vehicle_handler DEFINITION

*----------------------------------------------------------------------*
*       CLASS vehicle_handler IMPLEMENTATION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS vehicle_handler IMPLEMENTATION.
  METHOD handle_vehicle.
    DATA: vehicle_ref TYPE REF TO vehicle,
          plane_ref TYPE REF TO plane,
          ship_ref TYPE REF TO ship.
    CATCH SYSTEM-EXCEPTIONS move_cast_error = 4.
      vehicle_ref ?= i_ref.
    ENDCATCH.
    IF sy-subrc = 0.
      WRITE / 'Working with vehicle'.
    ELSE.
      WRITE / 'This is not a vehicle'.
      EXIT.
    ENDIF.
    CATCH SYSTEM-EXCEPTIONS move_cast_error = 4.
      plane_ref ?= i_ref.
    ENDCATCH.
    IF sy-subrc = 0.
      WRITE: / 'Working with Plane'.
    ENDIF.
    CATCH SYSTEM-EXCEPTIONS move_cast_error = 4.
      ship_ref ?= i_ref.
    ENDCATCH.
    IF sy-subrc = 0.
      WRITE / 'Working with ship'.
    ENDIF.
  ENDMETHOD.                    "handle_vehicle
ENDCLASS. "vehicle_handler IMPLEMENTATION

DATA: handler TYPE REF TO vehicle_handler,
      vehicle_1 TYPE REF TO vehicle,
      vehicle_2 LIKE vehicle_1.

START-OF-SELECTION.

  CREATE OBJECT: handler,
                 vehicle_1 TYPE plane,
                 vehicle_2  TYPE ship.
  CALL METHOD: handler->handle_vehicle
            EXPORTING i_ref = handler,
              handler->handle_vehicle
            EXPORTING i_ref = vehicle_1,
              handler->handle_vehicle
            EXPORTING i_ref = vehicle_2.



*&---------------------------------------------------------------------*
*& Report  Z_POLYMOPHISM_VIA_INHERITANCE
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  z_polymophism_via_inheritance.

************************************************************************
* Report Name  : Z_POLYMOPHISM_VIA_INHERITANCE                                                 *
* Report Title : <description>                                         *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 01/25/2019 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  : ABAP Objects 2. AUfl. S.354              *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.1 | Date:01.25.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************


CLASS ship DEFINITION ABSTRACT.
  PUBLIC SECTION.
    METHODS: get_max_range ABSTRACT
      RETURNING value(r_range) TYPE f,
    get_name
      RETURNING value(r_name) TYPE string.
  PROTECTED SECTION.
    DATA name TYPE string.
ENDCLASS.                    "ship DEFINITION



*----------------------------------------------------------------------*
*       CLASS motorship DEFINITION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS motorship DEFINITION INHERITING FROM ship.
  PUBLIC SECTION.
    METHODS: constructor IMPORTING
              value(i_name) TYPE string
              value(i_fuel_consumption) TYPE f
              value(i_fuel_amount) TYPE f,
             get_max_range REDEFINITION.
  PROTECTED SECTION.
    DATA: fuel_consumption TYPE f,
          fuel_amount TYPE f.
ENDCLASS.                    "motorship DEFINITION



*----------------------------------------------------------------------*
*       CLASS sailingship DEFINITION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS sailingship DEFINITION INHERITING FROM ship.
  PUBLIC SECTION.
    METHODS: constructor IMPORTING
      value(i_name) TYPE string
      value(i_range_per_wind_speed) TYPE f
      value(i_wind_speed) TYPE f
      value(i_wind_duration) TYPE f,
      get_max_range REDEFINITION.
  PROTECTED SECTION.
    DATA: range_per_wind_speed TYPE f,
          wind_speed TYPE f,
          wind_duration TYPE f.
ENDCLASS.                    "sailingship DEFINITION

*----------------------------------------------------------------------*
*       CLASS ship IMPLEMENTATION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS ship IMPLEMENTATION.
  METHOD get_name.
    r_name = name.
  ENDMETHOD.                    "get_name
ENDCLASS.                    "ship IMPLEMENTATION

*----------------------------------------------------------------------*
*       CLASS motorship IMPLEMENTATION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS motorship IMPLEMENTATION.
  METHOD constructor.
    CALL METHOD super->constructor.

    name = i_name.
    fuel_consumption = i_fuel_consumption.
    fuel_amount = i_fuel_amount.
  ENDMETHOD.                    "constructor
  METHOD get_max_range.
    r_range = fuel_amount / fuel_consumption.
  ENDMETHOD.                    "get_max_range
ENDCLASS.                    "motorship IMPLEMENTATION

*----------------------------------------------------------------------*
*       CLASS sailingship IMPLEMENTATION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS sailingship IMPLEMENTATION.
  METHOD constructor.
    CALL METHOD super->constructor.
    name = i_name.
    range_per_wind_speed = i_range_per_wind_speed.
    wind_speed = i_wind_speed.
    wind_duration = i_wind_duration.
  ENDMETHOD.                    "constructor
  METHOD get_max_range.
    r_range = wind_speed / range_per_wind_speed *
    wind_duration.
  ENDMETHOD.                    "get_max_range
ENDCLASS.                    "sailingship IMPLEMENTATION


DATA: o_ship TYPE REF TO ship,
      ship_tab TYPE TABLE OF REF TO ship,
      name TYPE string,
      range TYPE f.


* Classical Processing blocs

START-OF-SELECTION.
  CREATE OBJECT o_ship TYPE motorship
            EXPORTING i_name = 'Motor Ship Wanda'
              i_fuel_consumption = '0.2'
              i_fuel_amount = 80.
  APPEND o_ship TO ship_tab.

  CREATE  OBJECT o_ship TYPE sailingship
            EXPORTING i_name = 'Sailing Ship Black Magic'
              i_range_per_wind_speed = 25
              i_wind_speed = 60
              i_wind_duration = 5.
  APPEND o_ship TO ship_tab.

  LOOP AT ship_tab INTO o_ship.
    name = o_ship->get_name( ).
    range = o_ship->get_max_range( ).
    WRITE: / 'range of', name, 'is',
              range EXPONENT 0 DECIMALS 2, 'Miles'.

  ENDLOOP.

*&---------------------------------------------------------------------*
*& Report  Z_INTERFACE_DEFINITION
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  z_interface_definition.

************************************************************************
* Report Name  : Z_INTERFACE_DEFINITION                              *
* Report Title : Definition und Implementierung eines Interfaces       *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 01/25/2019 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  : ABAP Objects 2. AUfl. S.364              *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.1 | Date:01.25.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************

INTERFACE object_status.
  METHODS write_status.
ENDINTERFACE.                    "OBJECT_status

*----------------------------------------------------------------------*
*       CLASS vehicle DEFINITION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS vehicle DEFINITION.
  PUBLIC SECTION.
    INTERFACES object_status.
    METHODS accelerate.
  PROTECTED SECTION.
    DATA speed TYPE i.
ENDCLASS.                    "vehicle DEFINITION

*----------------------------------------------------------------------*
*       CLASS vehicle IMPLEMENTATION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS vehicle IMPLEMENTATION.
  METHOD accelerate.
    speed = speed + 1.
  ENDMETHOD.                    "accelerate
  METHOD object_status~write_status.
    WRITE: / 'speed:', speed.
  ENDMETHOD.                    "OBJECT_status~write_status
ENDCLASS.                    "vehicle IMPLEMENTATION

DATA vehicle_ref TYPE REF TO vehicle.

START-OF-SELECTION.
  CREATE OBJECT vehicle_ref.
  CALL METHOD: vehicle_ref->accelerate,
               vehicle_ref->object_status~write_status.



*&---------------------------------------------------------------------*
*& Report  Z_INTERFACE_ALIAS
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  Z_INTERFACE_ALIAS.

************************************************************************
* Report Name  : Z_INTERFACE_ALIAS                                                 *
* Report Title : Aliasnamen in Klassen                                         *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 01/25/2019 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  : ABAP Objects 2. AUfl. S.368              *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.1 | Date:01.25.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************

INTERFACE object_status.
  METHODS write_status.
ENDINTERFACE.                    "OBJECT_status

*----------------------------------------------------------------------*
*       CLASS vehicle DEFINITION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS vehicle DEFINITION.
  PUBLIC SECTION.
    INTERFACES object_status.
    aliases write_status for OBJECT_status~write_status.
    METHODS accelerate.
  PROTECTED SECTION.
    DATA speed TYPE i.
ENDCLASS.                    "vehicle DEFINITION

*----------------------------------------------------------------------*
*       CLASS vehicle IMPLEMENTATION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS vehicle IMPLEMENTATION.
  METHOD accelerate.
    speed = speed + 1.
  ENDMETHOD.                    "accelerate
  METHOD object_status~write_status.
    WRITE: / 'speed:', speed.
  ENDMETHOD.                    "OBJECT_status~write_status
ENDCLASS.                    "vehicle IMPLEMENTATION

DATA vehicle_ref TYPE REF TO vehicle.

START-OF-SELECTION.
  CREATE OBJECT vehicle_ref.
  CALL METHOD: vehicle_ref->accelerate,
               vehicle_ref->object_status~write_status.



*&---------------------------------------------------------------------*
*& Report  Z_INTERFACE_REFERENCE
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  Z_INTERFACE_REFERENCE.

************************************************************************
* Report Name  : Z_INTERFACE_REFERENCE                                                 *
* Report Title : Interfacereferenz                                         *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 01/25/2019 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  : ABAP Objects 2. AUfl. S.373              *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.1 | Date:01.25.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************

INTERFACE object_status.
  METHODS write_status.
ENDINTERFACE.                    "OBJECT_status

*----------------------------------------------------------------------*
*       CLASS vehicle DEFINITION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS vehicle DEFINITION.
  PUBLIC SECTION.
    INTERFACES object_status.
    METHODS accelerate.
  PROTECTED SECTION.
    DATA speed TYPE i.
ENDCLASS.                    "vehicle DEFINITION

*----------------------------------------------------------------------*
*       CLASS vehicle IMPLEMENTATION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS vehicle IMPLEMENTATION.
  METHOD accelerate.
    speed = speed + 1.
  ENDMETHOD.                    "accelerate
  METHOD object_status~write_status.
    WRITE: / 'speed:', speed.
  ENDMETHOD.                    "OBJECT_status~write_status
ENDCLASS.                    "vehicle IMPLEMENTATION

DATA: vehicle_ref TYPE REF TO vehicle,
      status_ref type ref to object_status.

START-OF-SELECTION.
  CREATE OBJECT vehicle_ref.
  status_ref = vehicle_ref.

  CALL METHOD: vehicle_ref->accelerate,
               status_ref->write_status.



*&---------------------------------------------------------------------*
*& Report  Z_INTERFACE_NARROWING_CAST
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  z_interface_narrowing_cast.

************************************************************************
* Report Name  : Z_INTERFACE_NARROWING_CAST                           *
* Report Title : Narrowing Cast für für Interfacereferencen            *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 01/25/2019 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  :  ABAP Objects 2. Aufl. S. 375                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.1 | Date:01.25.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************

INTERFACE i1.
  METHODS meth.
ENDINTERFACE.                    "i1

*----------------------------------------------------------------------*
*       INTERFACE i2
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
INTERFACE i2.
  INTERFACES i1.
  METHODS meth.
ENDINTERFACE.                    "i1

*----------------------------------------------------------------------*
*       CLASS c1 DEFINITION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS c1 DEFINITION.
  PUBLIC SECTION.
    INTERFACES i2.
ENDCLASS.                    "i2 DEFINITION

*----------------------------------------------------------------------*
*       CLASS c1 IMPLEMENTATION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS c1 IMPLEMENTATION.
  METHOD i1~meth.
    WRITE / 'Method of interface i1.'.
  ENDMETHOD.                                                "i1~meth
  METHOD i2~meth.
    WRITE / 'Method of Inteface i2'.
  ENDMETHOD.                                                "i2~meth
ENDCLASS.                    "c1 IMPLEMENTATION

DATA: iref1 TYPE REF TO i1,
      iref2 TYPE REF TO i2.

START-OF-SELECTION.
  CREATE OBJECT iref2 TYPE c1.
  iref1 = iref2.
  CALL METHOD iref1->meth.
  CALL METHOD iref2->meth.



*&---------------------------------------------------------------------*
*& Report  Z_INTERFACE_WIDENING_1
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  z_interface_widening_1.

************************************************************************
* Report Name  : Z_INTERFACE_WIDENING_1                               *
* Report Title : Widening Cast auf Klassenreferenz                     *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 01/23/2019 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  :  ABAP Objects 2. Aufl. S. 377                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.1 | Date:01.24.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************



INTERFACE object_status.
  METHODS write_status.
ENDINTERFACE.                    "OBJECT_status

*----------------------------------------------------------------------*
*       CLASS vehicle DEFINITION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS vehicle DEFINITION.
  PUBLIC SECTION.
    INTERFACES object_status.
    METHODS accelerate.
  PROTECTED SECTION.
    DATA speed TYPE i.
ENDCLASS.                    "vehicle DEFINITION

*----------------------------------------------------------------------*
*       CLASS vehicle IMPLEMENTATION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS vehicle IMPLEMENTATION.
  METHOD accelerate.
    speed = speed + 1.
  ENDMETHOD.                    "accelerate
  METHOD object_status~write_status.
    WRITE: / 'speed:', speed.
  ENDMETHOD.                    "OBJECT_status~write_status
ENDCLASS.                    "vehicle IMPLEMENTATION

DATA: vehicle_ref TYPE REF TO vehicle,
      status_ref TYPE REF TO object_status.

START-OF-SELECTION.
  CREATE OBJECT status_ref TYPE vehicle.

  CATCH SYSTEM-EXCEPTIONS move_cast_error = 4.
    vehicle_ref ?= status_ref.
  ENDCATCH.
  IF sy-subrc = 0.
    CALL METHOD: vehicle_ref->accelerate,
                 status_ref->write_status.
  ENDIF.





*&---------------------------------------------------------------------*
*& Report  Z_INTERFACE_WIDENING_2
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  z_interface_widening_2.

************************************************************************
* Report Name  : Z_INTERFACE_WIDENING_2                                                 *
* Report Title : <description>                                         *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 01/25/2019 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  :  ABAP Objects 2. Aufl. S. 378                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.1 | Date:01.25.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************


INTERFACE object_status.
  METHODS write_status.
ENDINTERFACE.                    "OBJECT_status

*----------------------------------------------------------------------*
*       INTERFACE object_movement
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
INTERFACE object_movement.
  METHODS accelerate.
ENDINTERFACE.                    "object_movement


*----------------------------------------------------------------------*
*       CLASS vehicle DEFINITION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS vehicle DEFINITION.
  PUBLIC SECTION.
    INTERFACES: object_status,
                object_movement.
  PROTECTED SECTION.
    DATA speed TYPE i.
ENDCLASS.                    "vehicle DEFINITION

*----------------------------------------------------------------------*
*       CLASS vehicle IMPLEMENTATION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS vehicle IMPLEMENTATION.
  METHOD object_movement~accelerate.
    speed = speed + 1.
  ENDMETHOD.                    "object_status~accelerate
  METHOD object_status~write_status.
    WRITE: / 'Speed:', speed.
  ENDMETHOD.                    "OBJECT_status~write_status
ENDCLASS.                    "vehicle IMPLEMENTATION

DATA: movement_ref TYPE REF TO object_movement,
      status_ref TYPE REF TO object_status.


START-OF-SELECTION.
  CREATE OBJECT movement_ref TYPE vehicle.
  CALL METHOD movement_ref->accelerate.
  status_ref ?= movement_ref.
  CALL METHOD status_ref->write_status.



*&---------------------------------------------------------------------*
*& Report  Z_INTERFACE_POLYMORPHISM
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  z_interface_polymorphism.

************************************************************************
* Report Name  : Z_INTERFACE_POLYMORPHISM                                                 *
* Report Title : Polymorphie durch Interfaces                                        *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 01/25/2019 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  : ABAP Objects 2. AUfl. S.381              *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.1 | Date:01.25.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************

INTERFACE object_status.
  METHODS write_status.
ENDINTERFACE.                    "OBJECT_status

*----------------------------------------------------------------------*
*       CLASS vehicle DEFINITION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS vehicle DEFINITION.
  PUBLIC SECTION.
    INTERFACES object_status.
    METHODS accelerate.
  PROTECTED SECTION.
    DATA speed TYPE i.
ENDCLASS.                    "vehicle DEFINITION

*----------------------------------------------------------------------*
*       CLASS window DEFINITION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS window DEFINITION.
  PUBLIC SECTION.
    METHODS open_close.
    INTERFACES object_status.
  PROTECTED SECTION.
    DATA status_flag(1) TYPE c.
ENDCLASS.                    "window DEFINITION
*----------------------------------------------------------------------*
*       CLASS vehicle IMPLEMENTATION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS vehicle IMPLEMENTATION.
  METHOD accelerate.
    speed = speed + 1.
  ENDMETHOD.                    "accelerate
  METHOD object_status~write_status.
    WRITE: / 'speed:', speed.
  ENDMETHOD.                    "OBJECT_status~write_status
ENDCLASS.                    "vehicle IMPLEMENTATION

*----------------------------------------------------------------------*
*       CLASS window IMPLEMENTATION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS window IMPLEMENTATION.
  METHOD open_close.
    IF status_flag = ' '.
      status_flag = 'X'.
    ELSE.
      status_flag = ' '.
    ENDIF.
  ENDMETHOD.                    "open_close
  METHOD object_status~write_status.
    IF status_flag = ' '.
      WRITE / 'window is closed'.
    ELSE.
      WRITE / 'Window is open'.
    ENDIF.
  ENDMETHOD.                    "object_status~write_status
ENDCLASS.                    "window IMPLEMENTATION

DATA: vehicle_ref TYPE REF TO vehicle,
      window_ref TYPE REF TO window,
      status_tab TYPE TABLE OF REF TO object_status.

FIELD-SYMBOLS <status> TYPE REF TO object_status.

START-OF-SELECTION.
  CREATE OBJECT vehicle_ref.
  CALL METHOD: vehicle_ref->accelerate.
  APPEND vehicle_ref TO status_tab.
  CREATE OBJECT window_ref.
  CALL METHOD window_ref->open_close.
  APPEND window_ref TO status_tab.
  LOOP AT status_tab ASSIGNING <status>.
    CALL METHOD <status>->write_status.
  ENDLOOP.


*&---------------------------------------------------------------------*
*& Report  Z_ABAP_OBJECTS_EVENTS
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  z_abap_objects_events.

************************************************************************
* Report Name  : Z_ABAP_OBJECTS_EVENTS                                *
* Report Title : Definition und auslösen von Ereignissen              *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 01/25/2019 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  : ABAP Objects 2. AUfl. S.388              *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.1 | Date:01.25.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************

CLASS pilot DEFINITION.
  PUBLIC SECTION.
    METHODS call_flight_attendant.
    EVENTS call_button_pressed.
ENDCLASS.                    "pilot DEFINITION

*----------------------------------------------------------------------*
*       CLASS passenger DEFINITION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS passenger DEFINITION.
  PUBLIC SECTION.
    METHODS: constructor IMPORTING
                value(i_seatnumber) TYPE i,
                call_for_help.
    EVENTS call_button_pressed EXPORTING
                value(e_seatnumber) TYPE i.
  PROTECTED SECTION.
    DATA seatnumber TYPE i.
ENDCLASS.                    "passenger DEFINITION

*----------------------------------------------------------------------*
*       CLASS flight_attendant DEFINITION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS flight_attendant DEFINITION.
  PUBLIC SECTION.
    METHODS: constructor
    IMPORTING i_id TYPE string,
      help_the_pilot FOR EVENT
      call_button_pressed OF pilot,
      help_a_passenger FOR EVENT
      call_button_pressed OF passenger
      IMPORTING e_seatnumber.
  PROTECTED SECTION.
    DATA id TYPE string.
ENDCLASS.                    "flight_attendant DEFINITION


*----------------------------------------------------------------------*
*       CLASS pilot IMPLEMENTATION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS pilot IMPLEMENTATION.

  METHOD call_flight_attendant.
    RAISE EVENT call_button_pressed.
  ENDMETHOD.                    "call_flight_attendant
ENDCLASS.                    "pilot IMPLEMENTATION

*----------------------------------------------------------------------*
*       CLASS passenger IMPLEMENTATION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS passenger IMPLEMENTATION.
  METHOD constructor.
    seatnumber = i_seatnumber.
  ENDMETHOD.                    "constructor
  METHOD call_for_help.
    RAISE EVENT call_button_pressed
    EXPORTING e_seatnumber = seatnumber.
  ENDMETHOD.                    "call_for_help
ENDCLASS.                    "passenger IMPLEMENTATION

*----------------------------------------------------------------------*
*       CLASS flight_attendant IMPLEMENTATION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS flight_attendant IMPLEMENTATION.
  METHOD constructor.
    id = i_id.
  ENDMETHOD.                    "constructor
  METHOD help_the_pilot.
    WRITE: / id, 'helps Pilot'.
  ENDMETHOD.                    "help_the_pilot
  METHOD help_a_passenger.
    WRITE: / id, 'helps Passenger on Seat',
    e_seatnumber.
  ENDMETHOD.                    "help_a_passenger
ENDCLASS.                    "flight_attendant IMPLEMENTATION

DATA: purser TYPE REF TO flight_attendant,
      stewardess TYPE REF TO flight_attendant,
      pilot TYPE REF TO pilot,
      passenger_1 TYPE REF TO passenger,
      passenger_2 TYPE REF TO passenger.

* Classical Processing Blocks

START-OF-SELECTION.
  CREATE OBJECT: pilot,
                 passenger_1 EXPORTING i_seatnumber = 11,
                 passenger_2 EXPORTING i_seatnumber = 17.

  CREATE OBJECT: purser
        EXPORTING i_id = 'Purser',
                          stewardess
        EXPORTING i_id = 'Stewardess'.

  SET HANDLER: purser->help_the_pilot
                FOR pilot,
                stewardess->help_a_passenger
                FOR ALL INSTANCES.

  CALL METHOD: pilot->call_flight_attendant,
               passenger_1->call_for_help,
               passenger_2->call_for_help.



method CONSTRUCTOR.
* ABAP ObJEcTs 2. Aufl. S. 403
count = I_start.
endmethod.


METHOD decrement.
* ABAP ObJEcTs 2. Aufl. S. 404
  count = count - 1.
ENDMETHOD.


method GET_COUNT.
* ABAP ObJEcTs 2. Aufl. S. 404
r_count = count.
endmethod.

METHOD increment.
* ABAP ObJEcTs 2. Aufl. S. 403
  count = count + 1.
ENDMETHOD.

*&---------------------------------------------------------------------*
*& Report  Z_GLOBAL_CLASS_USAGE
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  z_global_class_usage.

************************************************************************
* Report Name  : Z_GLOBAL_CLASS_USAGE                                                 *
* Report Title : Verwendung einer Globalen Klasse                                        *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 01/25/2019 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  :  ABAP Objects 2. Aufl. S. 405                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.1 | Date:01.25.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************

DATA: o_counter TYPE REF TO z_cl_counter,
      count TYPE i.

*Classical Processing Blocks

START-OF-SELECTION.
  CREATE OBJECT o_counter EXPORTING i_start = 5.
  DO 10 TIMES.
    CALL METHOD o_counter->increment.
  ENDDO.
  count = o_counter->get_count( ).
  WRITE / count.




*&---------------------------------------------------------------------*
*& Report  Z_SCREEN_PAINTER_DEMO
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  z_screen_painter_demo.

************************************************************************
* Report Name  : Z_SCREEN_PAINTER_DEMO                                                 *
* Report Title : screen painter demo                                        *
* Report Title : Abfangbarer Laufzeitfehler                *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 01/26/2019 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  : ABAP Objects 2. AUfl. S.               *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.1 | Date:01.26.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************

DATA: input(22) TYPE c,
      check1(1) TYPE c,
      check2(1) TYPE c,
      radio1(1) TYPE c,
      radio2(1) TYPE c,
      radio3(1) TYPE c,
      ok_code TYPE sy-ucomm.
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0100  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE user_command_0100 INPUT.
  "  save_ok = ok_code.
  "  CLEAR ok_code.
  "  CASE save_ok.
  "    WHEN 'BACK'.
  "      leave to screen.
  "    WHEN 'EXIT'.
  "      LEAVE PROGRAM.
  "    WHEN 'cancel'.
  "      LEAVE SCREEN.
  "    WHEN 'PRESS'.
  "      CALL METHOD screen_100=>handle_push_button.
  "  ENDCASE.

ENDMODULE.                 " USER_COMMAND_0100  INPUT

*&---------------------------------------------------------------------*
*&      Form  on_ctmenue_input
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->L_MENU     text
*----------------------------------------------------------------------*
FORM on_ctmenue_input USING l_menu TYPE REF TO cl_ctmenu.
  CALL METHOD l_menu->add_function
    EXPORTING
      fcode = 'PRESS'
      text  = text-020.
ENDFORM.                    "on_ctmenue_input



*ABAP Objects 2. Auflage S.
PROCESS BEFORE OUTPUT.
* MODULE STATUS_0100.
*
PROCESS AFTER INPUT.
 MODULE USER_COMMAND_0100.







*&---------------------------------------------------------------------*
*& Report  Z_CHANGE_PLANETYPE
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  Z_CHANGE_PLANETYPE.

************************************************************************
* Report Name  : Z_CHANGE_PLANETYPE                                                 *
* Report Title : Change Planetype                                         *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 01/26/9999 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  : ABAP ObJEcTs  2. Auflage S. 444                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.1 | Date:01.26.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************


INCLUDE: z_change_planetypetop,    " Global Data Declarations
         z_change_planetypef1.     " Klassen


INCLUDE: z_change_planetypee01,    " Runtime events
         z_change_planetypeo01,    " PBO Moduls
         z_change_planetypei01.    " PAI Moduls



*&---------------------------------------------------------------------*
*& Report  Z_CHANGE_PLANETYPE
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  Z_CHANGE_PLANETYPE.

************************************************************************
* Report Name  : Z_CHANGE_PLANETYPE                                                 *
* Report Title : Change Planetype                                         *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 01/26/9999 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  : ABAP ObJEcTs  2. Auflage S. 444                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.1 | Date:01.26.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************


INCLUDE: z_change_planetypetop,    " Global Data Declarations
         z_change_planetypef1.     " Klassen


INCLUDE: z_change_planetypee01,    " Runtime events
         z_change_planetypeo01,    " PBO Moduls
         z_change_planetypei01.    " PAI Moduls

*&---------------------------------------------------------------------*
*&  Include           Z_CHANGE_PLANETYPETOP
*&---------------------------------------------------------------------*
*ABAP ObJEcTS S.450
TABLES demo_conn.
DATA: ok_code TYPE sy-ucomm,
      save_ok TYPE sy-ucomm.





*&---------------------------------------------------------------------*
*&  Include           Z_CHANGE_PLANETYPEF1
*&---------------------------------------------------------------------*
*ABAP ObJEcTS S.450
CLASS change_planetype DEFINITION.
  PUBLIC SECTION.
    CLASS-METHODS:
    get_data
    IMPORTING i_carrid    TYPE demo_conn-carrid
              i_connid    TYPE demo_conn-connid
              i_fldate    TYPE demo_conn-fldate
              i_seatsmax  TYPE demo_conn-seatsmax
    EXPORTING e_cityfrom  TYPE demo_conn-cityfrom
              e_cityto    TYPE demo_conn-cityto
              e_seatsmax  TYPE demo_conn-seatsmax
              e_seatsocc  TYPE demo_conn-seatsocc
              e_planetype TYPE demo_conn-planetype,
        check_planetype
    IMPORTING i_planetype TYPE demo_conn-planetype
              i_seatsocc  TYPE demo_conn-seatsocc
     EXPORTING e_seatsmax TYPE demo_conn-seatsmax,
        update_planetype
    IMPORTING i_carrid    TYPE demo_conn-carrid
              i_connid    TYPE demo_conn-connid
              i_fldate    TYPE demo_conn-fldate
              i_planetype TYPE demo_conn-planetype
              i_seatsmax  TYPE demo_conn-seatsmax,
        security_check
    IMPORTING i_planetype TYPE demo_conn-planetype
              i_ok_code   TYPE sy-ucomm.
  PRIVATE SECTION.
    CLASS-DATA c_planetype TYPE demo_conn-planetype.
ENDCLASS.                    "change_planetype DEFINITION

*----------------------------------------------------------------------*
*       CLASS change_planetype IMPLEMENTATION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS change_planetype IMPLEMENTATION.
  METHOD get_data.
    SELECT SINGLE p~cityfrom p~cityto
                  f~seatsmax f~seatsocc f~planetype
      FROM ( spfli AS p
      INNER JOIN sflight AS f ON p~carrid  = f~carrid
                              AND p~connid = f~connid )
      INTO (e_cityfrom, e_cityto,
            e_seatsmax, e_seatsocc, e_planetype )
      WHERE p~carrid = i_carrid AND
            p~connid = i_connid AND
            f~fldate = i_fldate.
    c_planetype = e_planetype.
    IF sy-subrc <> 0.
      MESSAGE e888(sabapdocu) WITH text-010.
    ENDIF.
  ENDMETHOD.                    "get_data
  METHOD check_planetype.
    SELECT SINGLE seatsmax
      FROM  saplane
      INTO  e_seatsmax
      WHERE planetype = i_planetype.
    IF e_seatsmax < i_seatsocc.
      MESSAGE e888(sabapdocu) WITH e_seatsmax text-020.
    ENDIF.
  ENDMETHOD.                    "check_planetype
  METHOD update_planetype.
    IF c_planetype <> i_planetype.
      UPDATE sflight
      SET   planetype = i_planetype
            seatsmax  = i_seatsmax
      WHERE carrid    = i_carrid AND
            connid    = i_connid AND
            fldate    = i_fldate.
      IF sy-subrc = 0.
        MESSAGE i888(sabapdocu) WITH sy-dbcnt text-030.
            c_planetype = i_planetype.
      ELSE.
        MESSAGE e888(sabapdocu) WITH text-040.
      ENDIF.
    ENDIF.
  ENDMETHOD.                    "update_planetype
  METHOD security_check.
    IF i_planetype <> c_planetype.
      CALL SCREEN 210 STARTING AT 32 8.
    ENDIF.
    IF ok_code = 'CHANGE_AGAIN'.
      SET SCREEN 200.
    ELSEIF ok_code  = 'CONFIRM' OR
           ok_code  = space.
      IF i_ok_code = 'BACK'.
        SET SCREEN 100.
      ELSEIF i_ok_code = 'EXIT'.
        SET SCREEN 0.
      ENDIF.
    ENDIF.
    CLEAR ok_code.
  ENDMETHOD. "security_check
ENDCLASS.                    "change_planetype IMPLEMENTATION




*&---------------------------------------------------------------------*
*&  Include           Z_CHANGE_PLANETYPEE01
*&---------------------------------------------------------------------*
*ABAP ObJEcTS S.450
START-OF-SELECTION.
  CALL SCREEN 100.



*&---------------------------------------------------------------------*
*&  Include           Z_CHANGE_PLANETYPEO01
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Module  set_STATUS  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*ABAP ObJEcTS S.451
MODULE set_status OUTPUT.
  CASE sy-dynnr.
    WHEN 100.
      SET TITLEBAR 'TIT_100_200'.
      SET PF-STATUS 'SCREEN_100_200' EXCLUDING 'UPDATE'.
    WHEN 200.
      SET TITLEBAR 'TIT_100_200'.
      SET PF-STATUS 'SCREEN_100_200' EXCLUDING 'CHANGE'.
    WHEN 300.
      SET TITLEBAR 'TIT_210'.
      SET PF-STATUS 'SCREEN_210'.
  ENDCASE.
ENDMODULE.                 " set_STATUS  OUTPUT




*&---------------------------------------------------------------------*
*&  Include           Z_CHANGE_PLANETYPEI01
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*&      Module  cancel  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*ABAP ObJEcTS S.452
MODULE cancel INPUT.
  CASE sy-dynnr.
    WHEN 100.
      LEAVE TO SCREEN 0.
    WHEN 200.
      LEAVE TO SCREEN 100.
  ENDCASE.
ENDMODULE.                 " cancel  INPUT
*&---------------------------------------------------------------------*
*&      Module  handle_user_command  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE handle_user_command INPUT.
  save_ok = ok_code.
  CLEAR ok_code.
  CASE save_ok.
    WHEN 'CHANGE'.
      CALL METHOD change_planetype=>get_data
        EXPORTING
          i_carrid    = demo_conn-carrid
          i_connid    = demo_conn-connid
          i_fldate    = demo_conn-fldate
          i_seatsmax  = demo_conn-seatsmax
        IMPORTING
          e_cityfrom  = demo_conn-cityfrom
          e_cityto    = demo_conn-cityto
          e_seatsmax  = demo_conn-seatsmax
          e_seatsocc  = demo_conn-seatsocc
          e_planetype = demo_conn-planetype.
      SET SCREEN 200.
    WHEN 'UPDATE'.
      CALL METHOD change_planetype=>check_planetype
        EXPORTING
          i_planetype = demo_conn-planetype
          i_seatsocc  = demo_conn-seatsocc
        IMPORTING
          e_seatsmax  = demo_conn-seatsmax.

      CALL METHOD change_planetype=>update_planetype
        EXPORTING
          i_carrid    = demo_conn-carrid
          i_connid    = demo_conn-connid
          i_fldate    = demo_conn-fldate
          i_planetype = demo_conn-planetype
          i_seatsmax  = demo_conn-seatsmax.
      SET SCREEN 200.
    WHEN 'BACK' OR 'EXIT'.
      CASE sy-dynnr.
        WHEN 100.
          LEAVE TO SCREEN 0.
        WHEN 200.
          CALL METHOD change_planetype=>security_check
            EXPORTING
              i_planetype = demo_conn-planetype
              i_ok_code   = save_ok.
      ENDCASE.
  ENDCASE.

ENDMODULE.                 " handle_user_command  INPUT




*ABAP Objects 2. Auflage S. 446
PROCESS BEFORE OUTPUT.
 MODULE set_STATUS.
*
PROCESS AFTER INPUT.
module cancel at exit-command.
  field demo_conn-fldate module handle_user_command.
* MODULE USER_COMMAND_0100.



*ABAP Objects 2. Auflage S. 446
PROCESS BEFORE OUTPUT.
 MODULE set_STATUS.
*
PROCESS AFTER INPUT.
module cancel at exit-command.
  field demo_conn-planetype module handle_user_command.
* MODULE USER_COMMAND_0100.



*ABAP Objects 2. Auflage S. 446
PROCESS BEFORE OUTPUT.
 MODULE set_STATUS.
*
PROCESS AFTER INPUT.

* MODULE USER_COMMAND_0100.



*&---------------------------------------------------------------------*
*& Report  Z_SELECTION_SCREEN_DEMO
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  z_selection_screen_demo.

************************************************************************
* Report Name  : Z_SELECTION_SCREEN_DEMO                           *
* Report Title : Definition und aufruf eines Selektionsbildes          *
* Report Title : Abfangbarer Laufzeitfehler                *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 01/26/2019 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  : ABAP Objects 2. AUfl. S.  460             *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.1 | Date:01.26.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************
*Selection Screen

SELECTION-SCREEN BEGIN OF SCREEN 500
                  AS WINDOW TITLE text-010.
PARAMETERS p_input(16) TYPE c.

SELECTION-SCREEN: SKIP,
                  BEGIN OF BLOCK b1
                    WITH FRAME TITLE text-020.

PARAMETERS: check1 AS CHECKBOX,
            check2 AS CHECKBOX,
            check3 AS CHECKBOX.

SELECTION-SCREEN: END OF BLOCK b1,
                  SKIP,
                  BEGIN OF BLOCK b2
                  WITH FRAME TITLE text-030.
PARAMETERS: radio1 RADIOBUTTON GROUP rad,
            radio2 RADIOBUTTON GROUP rad,
            radio3 RADIOBUTTON GROUP rad.
SELECTION-SCREEN: END OF BLOCK b2,
                  END OF SCREEN 500.
* Processing blocks called by the runtime enviroment
START-OF-SELECTION.
  CALL  SELECTION-SCREEN 500 STARTING AT 10 10.

*&---------------------------------------------------------------------*
*& Report  Z_SELECT_OPTIONS
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  Z_SELECT_OPTIONS.

************************************************************************
* Report Name  : Z_SELECT_OPTIONS                                                 *
* Report Title : Definition einer komplexen Selektion                                       *
* Report Title : Abfangbarer Laufzeitfehler                *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 01/26/2019 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  : ABAP Objects 2. AUfl. S.467            *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.1 | Date:01.26.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************

data wa_spfli type spfli.

SELECT-OPTIONS s_carrid for wa_spfli-carrid.

* runtime Events
START-OF-SELECTION.
SELECT *
  from spfli
  into wa_spfli
  where carrid in s_carrid.

  ENDSELECT.




*&---------------------------------------------------------------------*
*& Report  Z_SELECTION_SCREEN_CHECK
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  z_selection_screen_check.

************************************************************************
* Report Name  : Z_SELECTION_SCREEN_CHECK                                                 *
* Report Title : <description>                                         *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 99/99/9999 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.# | Date:99.99.99 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************

DATA wa_sflight TYPE sflight.


* Selection Screen

PARAMETERS: p_carrid TYPE sflight-carrid,
            p_connid TYPE sflight-connid,
            p_fldate TYPE sflight-fldate.


* Runtime events

AT SELECTION-SCREEN ON p_fldate.
  SELECT SINGLE seatsocc seatsmax
    FROM sflight
    INTO (wa_sflight-seatsocc, wa_sflight-seatsmax)
    WHERE carrid = p_carrid AND
          connid = p_connid.

  IF wa_sflight-seatsocc < wa_sflight-seatsmax.
    MESSAGE i888(sabapdocu) WITH text-010.
  ELSEIF wa_sflight-seatsocc = wa_sflight-seatsmax.
    MESSAGE i888(sabapdocu) WITH text-020.
  ELSEIF wa_sflight-seatsocc > wa_sflight-seatsmax.
    MESSAGE i888(sabapdocu) WITH text-030.
  ENDIF.






*&---------------------------------------------------------------------*
*& Report  Z_SELECTION_SCREEN_FUNCT
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  z_selection_screen_funct.

************************************************************************
* Report Name  : Z_SELECTION_SCREEN_FUNCT                              *
* Report Title : Definition von Selektionsbildern                *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 01/26/2019 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  : ABAP Objects 2. AUfl. S. 480              *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.1 | Date:01.26.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************

DATA: wa_connid TYPE s_conn_id,
      index TYPE i.
FIELD-SYMBOLS <fs> TYPE sscrfields-functxt_01.

TABLES sscrfields.

PARAMETERS p_carrid TYPE s_carr_id.
SELECT-OPTIONS s_connid FOR wa_connid NO INTERVALS.

DATA s_connid_line LIKE LINE OF s_connid.
SELECTION-SCREEN FUNCTION KEY: 1, 2, 3, 4, 5.

*Runtime Events
INITIALIZATION.
  sscrfields-functxt_01 = 'AC'.
  sscrfields-functxt_02 = 'LH'.
  sscrfields-functxt_03 = 'SHS'.
  sscrfields-functxt_04 = 'THA'.
  sscrfields-functxt_05 = 'UA'.

AT SELECTION-SCREEN.
  IF sscrfields-ucomm(3) = 'FC0'.
    index = sscrfields-ucomm+3(1) + 3.
    ASSIGN COMPONENT index OF STRUCTURE sscrfields TO <fs>.
    p_carrid = <fs>.
    CLEAR s_connid[].
    s_connid_line-sign = 'I'.
    s_connid_line-option = 'EQ'.
    SELECT connid
      FROM spfli
      INTO s_connid_line-low
      WHERE carrid = p_carrid.
      APPEND s_connid_line TO s_connid.
    ENDSELECT.
  ENDIF.


*&---------------------------------------------------------------------*
*& Report  Z_CLASSICAL_LIST
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  z_classical_list.

************************************************************************
* Report Name  : Z_CLASSICAL_LIST                                      *
* Report Title : Klassische Listenausgabe wäh. eines Datenbankzugriffes*
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 01/26/2019 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  : ABAP Objects 2. AUfl. S.     486          *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.1 | Date:01.26.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************

DATA wa_spfli TYPE spfli.

SELECT carrid connid
  FROM spfli
  INTO (wa_spfli-carrid, wa_spfli-connid).
  WRITE: / wa_spfli-carrid, wa_spfli-connid.
ENDSELECT.


*&---------------------------------------------------------------------*
*& Report  Z_ABAP_OBJECTS_LIST
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  Z_ABAP_OBJECTS_LIST.

************************************************************************
* Report Name  : Z_ABAP_OBJECTS_LIST                                                 *
* Report Title : <description>                                         *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 99/99/9999 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.# | Date:99.99.99 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************

DATA spfli_tab type TABLE OF spfli.
data  alv_list type ref TO cl_gui_alv_grid.

select * from spfli
  into table spfli_tab.

  CREATE OBJECT alv_list
  EXPORTING i_parent = cl_gui_container=>screen0.
  call METHOD alv_list->set_table_for_first_display
  exporting i_structure_name = 'SPFLI'
    changing it_outtab = spfli_tab.
  call SCREEN 100.


*&---------------------------------------------------------------------*
*& Report  Z_LIST_DISPLAY
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  z_list_display.

************************************************************************
* Report Name  : Z_LIST_DISPLAY                                          *
* Report Title : Programmgesteuerte Listenanzeige              *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 01/26/2019 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  : ABAP Objects 2. AUfl. S. 496               *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.1 | Date:01.26.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************

TABLES demo_conn.

DATA: wa_spfli TYPE spfli.

START-OF-SELECTION.
  CALL SCREEN 100.
*&---------------------------------------------------------------------*
*&      Module  STATUS_0100  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE status_0100 OUTPUT.
  SET PF-STATUS 'SCREEN_100'.
*  SET TITLEBAR 'xxx'.

ENDMODULE.                 " STATUS_0100  OUTPUT
*&---------------------------------------------------------------------*
*&      Module  cancel  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE cancel INPUT.
  LEAVE PROGRAM.
ENDMODULE.                 " cancel  INPUT
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0100  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE user_command_0100 INPUT.
  CALL SCREEN 500.
  SET SCREEN 100.
ENDMODULE.                 " USER_COMMAND_0100  INPUT

*----------------------------------------------------------------------*
*  MODULE create_list OUTPUT
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
MODULE create_list OUTPUT.
  LEAVE TO LIST-PROCESSING AND RETURN TO SCREEN 0.
  SET PF-STATUS space.
  SELECT carrid connid cityfrom cityto
    FROM spfli
    INTO (wa_spfli-carrid, wa_spfli-connid,
          wa_spfli-cityfrom, wa_spfli-cityto)
    WHERE carrid = demo_conn-carrid.
    WRITE: / wa_spfli-carrid, wa_spfli-connid,
             wa_spfli-cityfrom, wa_spfli-cityto.
  ENDSELECT.
  LEAVE SCREEN.
ENDMODULE.                    "create_list OUTPUT

TOP-OF-PAGE.
  WRITE text-001 COLOR COL_HEADING.
  ULINE.
*ABAP Objects 2. Auflage S. 497
PROCESS BEFORE OUTPUT.
 MODULE STATUS_0100.
*
PROCESS AFTER INPUT.
module cancel AT EXIT-COMMAND.
 MODULE USER_COMMAND_0100.

*ABAP Objects 2. Auflage S. 497
PROCESS BEFORE OUTPUT.
* MODULE STATUS_0500.
  MODULE create_list.

PROCESS AFTER INPUT.
* MODULE USER_COMMAND_0500.




*&---------------------------------------------------------------------*
*& Report  Z_INTERACTIVE_LISTS
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  z_interactive_lists.

************************************************************************
*Report Name  : Z_INTERACTIVE_LISTS
* Report Title : Klassisce Listverarbeitung              *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 01/26/2019 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  : ABAP Objects 2. AUfl. S. 504               *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.1 | Date:01.26.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************

PARAMETERS p_carrid TYPE spfli-carrid.

DATA: wa_spfli  TYPE spfli,
      wa_sbook  TYPE sbook,
      num       TYPE i,
      dat       TYPE d.

START-OF-SELECTION.
  num = 0.
  SET PF-STATUS 'FLIGHT'.
  SELECT *
    FROM spfli
    INTO wa_spfli
    WHERE carrid = p_carrid.
    num = num + 1.
    WRITE: / wa_spfli-carrid, wa_spfli-connid,
             wa_spfli-cityfrom, wa_spfli-cityto.
    HIDE: wa_spfli-carrid, wa_spfli-connid, num.
  ENDSELECT.
  CLEAR num.

*Page headers
TOP-OF-PAGE.
  WRITE 'List of Flights'.
  ULINE.
  WRITE 'CA CONN FROM                     TO'.
  ULINE.

TOP-OF-PAGE DURING LINE-SELECTION.
  CASE sy-pfkey.
    WHEN 'BOOKING'.
      WRITE sy-lisel.
      ULINE.
    WHEN 'WINDOW'.
      WRITE: 'Booking', wa_sbook-bookid,
           / 'Date' , wa_sbook-fldate.
      ULINE.
  ENDCASE.

*React on user actions.
AT USER-COMMAND.
  CASE sy-ucomm.
    WHEN 'SELE'.
      IF num <> 0.
        SET PF-STATUS 'BOOKING'.
        CLEAR dat.
        SELECT *
          FROM sbook
          INTO wa_sbook
          WHERE carrid = wa_spfli-carrid AND
          connid = wa_spfli-connid.
          IF wa_sbook-fldate <> dat.
             dat = wa_sbook-fldate.
            SKIP.
            WRITE / wa_sbook-fldate.
            POSITION 16.
          ELSE.
            NEW-LINE.
            POSITION 16.
          ENDIF.
          WRITE wa_sbook-bookid.
          HIDE: wa_sbook-bookid, wa_sbook-fldate,
                wa_sbook-custtype, wa_sbook-smoker,
                wa_sbook-luggweight, wa_sbook-class.
        ENDSELECT.
        IF sy-subrc <> 0.
          WRITE / 'No bookings for this flight'.
        ENDIF.
        num = 0.
        CLEAR wa_sbook-bookid.
      ENDIF.
    WHEN 'INFO'.
      IF NOT wa_sbook-bookid IS INITIAL.
        SET PF-STATUS 'WINDOW'.
        SET TITLEBAR 'TIT_BOOKING'.
        WINDOW STARTING AT 30 5 ENDING AT 60 10.
        WRITE: / 'Customer type   :', wa_sbook-custtype,
               / 'Smoker          :', wa_sbook-smoker,
               / 'Luggage weight  :',
               wa_sbook-luggweight UNIT 'KG',
               / 'Class           :', wa_sbook-class.
      ENDIF.
  ENDCASE.




*&---------------------------------------------------------------------*
*& Report  Z_GUI_CONTROLS_B
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  z_gui_controls_b.

************************************************************************
* Report Name  : Z_GUI_CONTROLS_B                                      *
* Report Title : Klassisches Rahmenprogramm                            *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                             *
* Create Date  : 01/26/2019 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  : ABAP Objects 2. AUfl. S. 544               *
*              : Hilfsprogramm zum Hochladen des Bildes ist            *
*              : REPORT  z_picture_save.               *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.1 | Date:01.26.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************


*&---------------------------------------------------------------------*
*&      Module  cancel  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE cancel INPUT.
  LEAVE PROGRAM.
ENDMODULE.                 " cancel  INPUT

*----------------------------------------------------------------------*
*       CLASS screen_handler DEFINITION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS screen_handler DEFINITION CREATE PRIVATE.
  PUBLIC SECTION.
    CLASS-DATA screen TYPE REF TO screen_handler.
    CLASS-METHODS create_screen.
    METHODS constructor.
  PRIVATE SECTION.
    DATA:
          container_html    TYPE REF TO cl_gui_custom_container,
          container_box     TYPE REF TO cl_gui_dialogbox_container,
          picture           TYPE REF TO cl_gui_picture,
          tree              TYPE REF TO cl_gui_simple_tree,
          html_viewer       TYPE REF TO cl_gui_html_viewer,
          list_viewer       TYPE REF TO cl_gui_alv_grid.
    METHODS:  fill_picture,
              fill_tree,
              fill_html
                IMPORTING i_carrid TYPE spfli-carrid,
              fill_list
                IMPORTING i_carrid TYPE spfli-carrid
                          i_connid TYPE spfli-connid,
              handle_node_double_click
                FOR EVENT node_double_click
                      OF cl_gui_simple_tree
                IMPORTING node_key,
              close_box
               FOR EVENT close
                   OF cl_gui_dialogbox_container.


ENDCLASS.                    "screen_handler DEFINITION


*----------------------------------------------------------------------*
*       CLASS screen_handler IMPLEMENTATION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS screen_handler IMPLEMENTATION.

  METHOD create_screen.
    IF  screen IS INITIAL.
      CREATE OBJECT screen.
    ENDIF.
  ENDMETHOD.                    "create_screen
  METHOD constructor.
    DATA: l_event_tab         TYPE cntl_simple_events,
          l_event             LIKE LINE OF l_event_tab,
          l_docking           TYPE REF TO cl_gui_docking_container,
          l_splitter          TYPE REF TO cl_gui_splitter_container,
          l_container_top     TYPE REF TO cl_gui_container,
          l_container_bottom  TYPE REF TO cl_gui_container.

    CREATE OBJECT container_html
    EXPORTING container_name = 'CUSTOM_CONTROL'.

    CREATE OBJECT l_docking
    EXPORTING side = cl_gui_docking_container=>dock_at_left
          extension = 135.

    CREATE OBJECT l_splitter
    EXPORTING parent  = l_docking
              rows    = 2
              columns = 1.

    CALL METHOD
      l_splitter->set_border
      EXPORTING
        border = cl_gui_cfw=>false.
    CALL METHOD
      l_splitter->set_row_mode
      EXPORTING
        mode = l_splitter->mode_absolute.

    CALL METHOD
      l_splitter->set_row_height
      EXPORTING
        id     = 1
        height = 180.

    l_container_top =
    l_splitter->get_container( row = 1 column = 1 ).

    l_container_bottom =
    l_splitter->get_container( row = 2 column = 1 ).

    CREATE OBJECT picture
    EXPORTING parent = l_container_top.

    CREATE OBJECT tree
    EXPORTING parent = l_container_bottom
      node_selection_mode =
      cl_gui_simple_tree=>node_sel_mode_single.

    l_event-eventid =
    cl_gui_simple_tree=>eventid_node_double_click.
    l_event-appl_event = ' '.
    APPEND l_event TO l_event_tab.

    CALL METHOD
      tree->set_registered_events
      EXPORTING
        events = l_event_tab.

    SET HANDLER me->handle_node_double_click FOR tree.

    me->fill_picture( ).
    me->fill_tree( ).
  ENDMETHOD.                    "constructor

  METHOD fill_picture.
        TYPES t_line(256) TYPE x.
    DATA l_pict_tab TYPE TABLE OF t_line.
    DATA l_url(255) TYPE c.

    IMPORT pict_tab = l_pict_tab
    FROM DATABASE zabtree(pi)
          ID 'FLIGHTS'.

    CALL FUNCTION 'DP_CREATE_URL'
      EXPORTING
        type    = 'IMAGE'
        subtype = 'GIF'
      TABLES
        data    = l_pict_tab
      CHANGING
        url     = l_url.

    CALL METHOD picture->load_picture_from_url
      EXPORTING
        url = l_url.

    CALL METHOD picture->set_display_mode
      EXPORTING
        display_mode = picture->display_mode_stretch.

  ENDMETHOD.                    "fill_picture


  METHOD fill_tree.
    DATA: l_node_table TYPE TABLE OF abdemonode,
          l_node TYPE abdemonode,
          l_spfli TYPE spfli,
          l_spfli_tab TYPE SORTED TABLE OF spfli
          WITH UNIQUE KEY carrid connid.

    SELECT carrid connid
      FROM spfli
      INTO CORRESPONDING FIELDS OF TABLE l_spfli_tab.

    l_node-hidden   = ' '.
    l_node-disabled = ' '.
    l_node-isfolder = 'X'.
    l_node-expander = ' '.


    LOOP AT l_spfli_tab INTO l_spfli.
      AT NEW carrid.
        l_node-node_key = l_spfli-carrid.
        CLEAR l_node-relatkey.
        CLEAR l_node-relatship.
        l_node-text = l_spfli-carrid.

        l_node-n_image = ' '.
        l_node-exp_image = ' '.
        APPEND l_node TO l_node_table.
      ENDAT.

      AT NEW connid.
        CONCATENATE l_spfli-carrid l_spfli-connid
        INTO l_node-node_key.
        l_node-relatkey = l_spfli-carrid.
        l_node-relatship = cl_gui_simple_tree=>relat_last_child.
        l_node-text = l_spfli-connid.
        l_node-n_image = '@AV@'.
        l_node-exp_image = '@AV@'.
      ENDAT.
      APPEND l_node TO l_node_table.
    ENDLOOP.
    CALL METHOD tree->add_nodes
      EXPORTING
        table_structure_name = 'ABDEMONODE'
        node_table           = l_node_table.
  ENDMETHOD.                    "fill_tree


  METHOD handle_node_double_click.

    DATA: l_carrid TYPE spfli-carrid,
          l_connid TYPE spfli-connid.

    l_carrid = node_key(2).
    l_connid = node_key+2(4).
    IF l_connid IS INITIAL.
      CALL METHOD fill_html
        EXPORTING
          i_carrid = l_carrid.
    ELSE.
      CALL METHOD fill_list
        EXPORTING
          i_carrid = l_carrid
          i_connid = l_connid.
    ENDIF.
    CALL METHOD cl_gui_cfw=>flush.
  ENDMETHOD.                    "handle_node_double_click

  METHOD fill_html.
    DATA l_url TYPE scarr-url.

    IF html_viewer IS INITIAL.
      CREATE OBJECT html_viewer
      EXPORTING parent = container_html.
    ENDIF.

    SELECT SINGLE url
      FROM scarr
      INTO l_url
      WHERE carrid = i_carrid.

    CALL METHOD html_viewer->show_url
      EXPORTING
        url = l_url.
  ENDMETHOD.                    "fill_html


  METHOD fill_list.
    DATA: l_flight_tab TYPE TABLE OF demofli,
        BEGIN OF l_flight_title,
          carrname TYPE scarr-carrname,
          cityfrom TYPE spfli-cityfrom,
          cityto  TYPE spfli-cityto,
          END OF l_flight_title,
          l_list_layout TYPE lvc_s_layo.



    IF container_box IS INITIAL.
      CREATE OBJECT container_box
      EXPORTING
         width    = 250
         height   = 200
         top      = 100
         left     = 400
         caption  = 'FLIGHT LIST'.
      SET HANDLER close_box FOR container_box.
      CREATE OBJECT list_viewer
          EXPORTING i_parent = container_box.
    ENDIF.

    SELECT SINGLE c~carrname p~cityfrom p~cityto
      INTO CORRESPONDING FIELDS OF l_flight_title
      FROM ( scarr AS c
      INNER JOIN  spfli AS p ON c~carrid = p~carrid )
      WHERE p~carrid = i_carrid AND
            p~connid = i_connid.

    SELECT fldate seatsmax seatsocc
      INTO CORRESPONDING FIELDS OF TABLE l_flight_tab
      FROM sflight
      WHERE carrid = i_carrid AND connid = i_connid
      ORDER BY fldate.

    CONCATENATE l_flight_title-carrname
                i_connid
                l_flight_title-cityfrom
                l_flight_title-cityto
    INTO l_list_layout-grid_title
    SEPARATED BY space.

    l_list_layout-smalltitle = 'X'.
    l_list_layout-cwidth_opt = 'X'.
    l_list_layout-no_toolbar = 'X'.

    CALL METHOD list_viewer->set_table_for_first_display
      EXPORTING
                i_structure_name = 'DEMOFLI'
                is_layout        = l_list_layout
      CHANGING
        it_outtab        = l_flight_tab.

  ENDMETHOD.                    "fill_list



  METHOD close_box.

    CALL METHOD: list_viewer->free,
                  container_box->free.

    CLEAR: list_viewer,
           container_box.
    CALL METHOD cl_gui_cfw=>flush.
  ENDMETHOD.                    "close_box



ENDCLASS.                    "screen_handler IMPLEMENTATION


* Event Block LOAD_OF_PROGRAM

LOAD-OF-PROGRAM.
  CALL  SCREEN 100.




*&---------------------------------------------------------------------*
*&      Module  STATUS_0100  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE status_0100 OUTPUT.
  SET PF-STATUS 'SCREEN_100'.
  SET TITLEBAR 'TIT_100'.
  CALL METHOD screen_handler=>create_screen.
ENDMODULE.                 " STATUS_0100  OUTPUT


*ABAP ObJEcTs S. 2. Aufl 544
PROCESS BEFORE OUTPUT.
 MODULE STATUS_0100.
*
PROCESS AFTER INPUT.
module cancel at EXIT-COMMAND.
* MODULE USER_COMMAND_0100.


*&---------------------------------------------------------------------*
*& Report  Z_GUI_CONTROLS_B
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  z_gui_controls_b.

************************************************************************
* Report Name  : Z_GUI_CONTROLS_B                                      *
* Report Title : Klassisches Rahmenprogramm                            *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                             *
* Create Date  : 01/26/2019 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  : ABAP Objects 2. AUfl. S. 544               *
*              : Hilfsprogramm zum Hochladen des Bildes ist            *
*              : REPORT  z_picture_save.               *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.1 | Date:01.26.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************


*&---------------------------------------------------------------------*
*&      Module  cancel  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE cancel INPUT.
  LEAVE PROGRAM.
ENDMODULE.                 " cancel  INPUT

*----------------------------------------------------------------------*
*       CLASS screen_handler DEFINITION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS screen_handler DEFINITION CREATE PRIVATE.
  PUBLIC SECTION.
    CLASS-DATA screen TYPE REF TO screen_handler.
    CLASS-METHODS create_screen.
    METHODS constructor.
  PRIVATE SECTION.
    DATA:
          container_html    TYPE REF TO cl_gui_custom_container,
          container_box     TYPE REF TO cl_gui_dialogbox_container,
          picture           TYPE REF TO cl_gui_picture,
          tree              TYPE REF TO cl_gui_simple_tree,
          html_viewer       TYPE REF TO cl_gui_html_viewer,
          list_viewer       TYPE REF TO cl_gui_alv_grid.
    METHODS:  fill_picture,
              fill_tree,
              fill_html
                IMPORTING i_carrid TYPE spfli-carrid,
              fill_list
                IMPORTING i_carrid TYPE spfli-carrid
                          i_connid TYPE spfli-connid,
              handle_node_double_click
                FOR EVENT node_double_click
                      OF cl_gui_simple_tree
                IMPORTING node_key,
              close_box
               FOR EVENT close
                   OF cl_gui_dialogbox_container.


ENDCLASS.                    "screen_handler DEFINITION


*----------------------------------------------------------------------*
*       CLASS screen_handler IMPLEMENTATION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
CLASS screen_handler IMPLEMENTATION.

  METHOD create_screen.
    IF  screen IS INITIAL.
      CREATE OBJECT screen.
    ENDIF.
  ENDMETHOD.                    "create_screen
  METHOD constructor.
    DATA: l_event_tab         TYPE cntl_simple_events,
          l_event             LIKE LINE OF l_event_tab,
          l_docking           TYPE REF TO cl_gui_docking_container,
          l_splitter          TYPE REF TO cl_gui_splitter_container,
          l_container_top     TYPE REF TO cl_gui_container,
          l_container_bottom  TYPE REF TO cl_gui_container.

    CREATE OBJECT container_html
    EXPORTING container_name = 'CUSTOM_CONTROL'.

    CREATE OBJECT l_docking
    EXPORTING side = cl_gui_docking_container=>dock_at_left
          extension = 135.

    CREATE OBJECT l_splitter
    EXPORTING parent  = l_docking
              rows    = 2
              columns = 1.

    CALL METHOD
      l_splitter->set_border
      EXPORTING
        border = cl_gui_cfw=>false.
    CALL METHOD
      l_splitter->set_row_mode
      EXPORTING
        mode = l_splitter->mode_absolute.

    CALL METHOD
      l_splitter->set_row_height
      EXPORTING
        id     = 1
        height = 180.

    l_container_top =
    l_splitter->get_container( row = 1 column = 1 ).

    l_container_bottom =
    l_splitter->get_container( row = 2 column = 1 ).

    CREATE OBJECT picture
    EXPORTING parent = l_container_top.

    CREATE OBJECT tree
    EXPORTING parent = l_container_bottom
      node_selection_mode =
      cl_gui_simple_tree=>node_sel_mode_single.

    l_event-eventid =
    cl_gui_simple_tree=>eventid_node_double_click.
    l_event-appl_event = ' '.
    APPEND l_event TO l_event_tab.

    CALL METHOD
      tree->set_registered_events
      EXPORTING
        events = l_event_tab.

    SET HANDLER me->handle_node_double_click FOR tree.

    me->fill_picture( ).
    me->fill_tree( ).
  ENDMETHOD.                    "constructor

  METHOD fill_picture.
        TYPES t_line(256) TYPE x.
    DATA l_pict_tab TYPE TABLE OF t_line.
    DATA l_url(255) TYPE c.

    IMPORT pict_tab = l_pict_tab
    FROM DATABASE zabtree(pi)
          ID 'FLIGHTS'.

    CALL FUNCTION 'DP_CREATE_URL'
      EXPORTING
        type    = 'IMAGE'
        subtype = 'GIF'
      TABLES
        data    = l_pict_tab
      CHANGING
        url     = l_url.

    CALL METHOD picture->load_picture_from_url
      EXPORTING
        url = l_url.

    CALL METHOD picture->set_display_mode
      EXPORTING
        display_mode = picture->display_mode_stretch.

  ENDMETHOD.                    "fill_picture


  METHOD fill_tree.
    DATA: l_node_table TYPE TABLE OF abdemonode,
          l_node TYPE abdemonode,
          l_spfli TYPE spfli,
          l_spfli_tab TYPE SORTED TABLE OF spfli
          WITH UNIQUE KEY carrid connid.

    SELECT carrid connid
      FROM spfli
      INTO CORRESPONDING FIELDS OF TABLE l_spfli_tab.

    l_node-hidden   = ' '.
    l_node-disabled = ' '.
    l_node-isfolder = 'X'.
    l_node-expander = ' '.


    LOOP AT l_spfli_tab INTO l_spfli.
      AT NEW carrid.
        l_node-node_key = l_spfli-carrid.
        CLEAR l_node-relatkey.
        CLEAR l_node-relatship.
        l_node-text = l_spfli-carrid.

        l_node-n_image = ' '.
        l_node-exp_image = ' '.
        APPEND l_node TO l_node_table.
      ENDAT.

      AT NEW connid.
        CONCATENATE l_spfli-carrid l_spfli-connid
        INTO l_node-node_key.
        l_node-relatkey = l_spfli-carrid.
        l_node-relatship = cl_gui_simple_tree=>relat_last_child.
        l_node-text = l_spfli-connid.
        l_node-n_image = '@AV@'.
        l_node-exp_image = '@AV@'.
      ENDAT.
      APPEND l_node TO l_node_table.
    ENDLOOP.
    CALL METHOD tree->add_nodes
      EXPORTING
        table_structure_name = 'ABDEMONODE'
        node_table           = l_node_table.
  ENDMETHOD.                    "fill_tree


  METHOD handle_node_double_click.

    DATA: l_carrid TYPE spfli-carrid,
          l_connid TYPE spfli-connid.

    l_carrid = node_key(2).
    l_connid = node_key+2(4).
    IF l_connid IS INITIAL.
      CALL METHOD fill_html
        EXPORTING
          i_carrid = l_carrid.
    ELSE.
      CALL METHOD fill_list
        EXPORTING
          i_carrid = l_carrid
          i_connid = l_connid.
    ENDIF.
    CALL METHOD cl_gui_cfw=>flush.
  ENDMETHOD.                    "handle_node_double_click

  METHOD fill_html.
    DATA l_url TYPE scarr-url.

    IF html_viewer IS INITIAL.
      CREATE OBJECT html_viewer
      EXPORTING parent = container_html.
    ENDIF.

    SELECT SINGLE url
      FROM scarr
      INTO l_url
      WHERE carrid = i_carrid.

    CALL METHOD html_viewer->show_url
      EXPORTING
        url = l_url.
  ENDMETHOD.                    "fill_html


  METHOD fill_list.
    DATA: l_flight_tab TYPE TABLE OF demofli,
        BEGIN OF l_flight_title,
          carrname TYPE scarr-carrname,
          cityfrom TYPE spfli-cityfrom,
          cityto  TYPE spfli-cityto,
          END OF l_flight_title,
          l_list_layout TYPE lvc_s_layo.



    IF container_box IS INITIAL.
      CREATE OBJECT container_box
      EXPORTING
         width    = 250
         height   = 200
         top      = 100
         left     = 400
         caption  = 'FLIGHT LIST'.
      SET HANDLER close_box FOR container_box.
      CREATE OBJECT list_viewer
          EXPORTING i_parent = container_box.
    ENDIF.

    SELECT SINGLE c~carrname p~cityfrom p~cityto
      INTO CORRESPONDING FIELDS OF l_flight_title
      FROM ( scarr AS c
      INNER JOIN  spfli AS p ON c~carrid = p~carrid )
      WHERE p~carrid = i_carrid AND
            p~connid = i_connid.

    SELECT fldate seatsmax seatsocc
      INTO CORRESPONDING FIELDS OF TABLE l_flight_tab
      FROM sflight
      WHERE carrid = i_carrid AND connid = i_connid
      ORDER BY fldate.

    CONCATENATE l_flight_title-carrname
                i_connid
                l_flight_title-cityfrom
                l_flight_title-cityto
    INTO l_list_layout-grid_title
    SEPARATED BY space.

    l_list_layout-smalltitle = 'X'.
    l_list_layout-cwidth_opt = 'X'.
    l_list_layout-no_toolbar = 'X'.

    CALL METHOD list_viewer->set_table_for_first_display
      EXPORTING
                i_structure_name = 'DEMOFLI'
                is_layout        = l_list_layout
      CHANGING
        it_outtab        = l_flight_tab.

  ENDMETHOD.                    "fill_list



  METHOD close_box.

    CALL METHOD: list_viewer->free,
                  container_box->free.

    CLEAR: list_viewer,
           container_box.
    CALL METHOD cl_gui_cfw=>flush.
  ENDMETHOD.                    "close_box



ENDCLASS.                    "screen_handler IMPLEMENTATION


* Event Block LOAD_OF_PROGRAM

LOAD-OF-PROGRAM.
  CALL  SCREEN 100.




*&---------------------------------------------------------------------*
*&      Module  STATUS_0100  OUTPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE status_0100 OUTPUT.
  SET PF-STATUS 'SCREEN_100'.
  SET TITLEBAR 'TIT_100'.
  CALL METHOD screen_handler=>create_screen.
ENDMODULE.                 " STATUS_0100  OUTPUT


*&---------------------------------------------------------------------*
*& Report  Z_PICTURE_SAVE
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  z_picture_save.

************************************************************************
* Report Name  : Z_PICTURE_SAVE                                 *
* Report Title : Hilfsprogramm zum Speichern von Bildern              *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 01/26/2019 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  : ABAP Objects 2.Aufl. S. 550                *
*              : Hilfsprogramm Bild Upload               *
*              : Geändertes Programm                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.# | Date:01.26.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************







*PARAMETERS file TYPE rlgrap-filename DEFAULT 'C:\TEMP\PLANE.GIF'.
*PARAMETERS id(20) TYPE x.

*TYPES pict_line(256) TYPE c.
*DATA pict_tab TYPE TABLE OF pict_line.

*CALL FUNCTION 'WS_UPLOAD'
* EXPORTING
*    filename = file
*    filetype = 'BIN'
*  TABLES
*   data_tab = pict_tab.

*EXPORT pict_tab = pict_tab TO DATABASE ZABTREE(pi) ID  'FLIGHTS'.

TYPES PICT_LINE(256) TYPE X.

DATA: pict_tab TYPE TABLE OF pict_line.

CALL FUNCTION 'GUI_UPLOAD'
EXPORTING
filename = 'C:\TEMP\PLANE.GIF' "File path with file name
filetype = 'BIN'

TABLES
data_tab = pict_tab.
EXPORT pict_tab = pict_tab TO DATABASE zabtree(pi) ID 'FLIGHTS'.
IF sy-subrc = 0.
WRITE: 'Success'.
ENDIF.


*&---------------------------------------------------------------------*
*& Report  Z_SELECT_SINGLE_ALL
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  z_select_single_all.

************************************************************************
* Report Name  : Z_SELECT_SINGLE_ALL                                   *
* Report Title : Lesen aller Spalten einer Zeile in einer Structur     *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 01/27/2019 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  :  ABAP Objects 2. Aufl. S. 566                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.1 | Date:01.27.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************


PARAMETERS: p_carrid TYPE spfli-carrid,
            p_connid TYPE spfli-connid.

DATA wa_spfli TYPE spfli.

SELECT SINGLE *
  FROM spfli
  INTO wa_spfli
  WHERE carrid = p_carrid AND
        connid = p_connid.


*&---------------------------------------------------------------------*
*& Report  Z_SELECT_SINGLE_INTO_LIST
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  z_select_single_into_list.

************************************************************************
* Report Name  : Z_SELECT_SINGLE_INTO_LIST                            *
* Report Title : Lesen bestimmter Spalten ein. Zeile in elem Felder *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 01/27/2019 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  :  ABAP Objects 2. Aufl. S. 567                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.1 | Date:01.27.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************

PARAMETERS: p_carrid TYPE spfli-carrid,
            p_connid TYPE spfli-connid.

DATA: wa_cityfrom TYPE spfli-cityfrom,
      wa_cityto   TYPE spfli-cityto.

SELECT SINGLE cityfrom cityto
  FROM spfli
  INTO (wa_cityfrom, wa_cityto)
  WHERE carrid = p_carrid AND
        connid = p_connid.



*&---------------------------------------------------------------------*
*& Report  Z_SELECT_SINGLE_CORRESPONDING
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  z_select_single_corresponding.

************************************************************************
* Report Name  : Z_SELECT_SINGLE_CORRESPONDING                                                 *
* Report Title : Lesen bestimmter Spalten ein. Zeile in einer Struktur                                         *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 01/27/2019 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  :  ABAP Objects 2. Aufl. S. 568                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.1 | Date:01.27.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************

PARAMETERS: p_carrid TYPE spfli-carrid,
            p_connid TYPE spfli-connid.

DATA: wa_cityfrom TYPE spfli-cityfrom,
      wa_cityto   TYPE spfli-cityto.
DATA  wa_spfli TYPE spfli.

SELECT SINGLE cityfrom cityto
  FROM spfli
  INTO CORRESPONDING FIELDS OF wa_spfli
  WHERE carrid = p_carrid AND
        connid = p_connid.


*&---------------------------------------------------------------------*
*& Report  Z_SELECT_INTO_LIST
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  z_select_into_list.

************************************************************************
* Report Name  : Z_SELECT_INTO_LIST                                   *
* Report Title : Lesen mehrerer Zeilen einer SELECT-Schleife         *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 01/27/2019 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  :  ABAP Objects 2. Aufl. S. 568                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.1 | Date:01.27.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************

PARAMETERS: p_carrid TYPE spfli-carrid,
            p_connid TYPE spfli-connid.

DATA: wa_cityfrom TYPE spfli-cityfrom,
      wa_cityto   TYPE spfli-cityto.
DATA  wa_spfli TYPE spfli.

SELECT cityfrom cityto
  FROM spfli
  INTO (wa_cityfrom, wa_cityto)
  WHERE carrid = p_carrid.

ENDSELECT.


*&---------------------------------------------------------------------*
*& Report  Z_SELECT_ALL
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  z_select_all.

************************************************************************
* Report Name  : Z_SELECT_ALL                                       *
* Report Title : Lesen aller Spalten mehrerer Zeilen in interne Tabelle
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 01/27/2019 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  :  ABAP Objects 2. Aufl. S. 568                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.1 | Date:01.27.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************

PARAMETERS: p_carrid TYPE spfli-carrid,
            p_connid TYPE spfli-connid.

DATA: wa_cityfrom TYPE spfli-cityfrom,
      wa_cityto   TYPE spfli-cityto.
DATA wa_spfli TYPE spfli.

DATA spfli_tab TYPE TABLE OF spfli.
SELECT *
  FROM spfli
  INTO TABLE spfli_tab
  WHERE carrid = p_carrid.


*&---------------------------------------------------------------------*
*& Report  Z_SELECT_CORRESPONDING
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  z_select_corresponding.

************************************************************************
* Report Name  : Z_SELECT_CORRESPONDING                                                 *
* Report Title : <description>                                         *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 01/27/2019 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  :  ABAP Objects 2. Aufl. S. 570                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.1 | Date:01.27.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************

PARAMETERS: p_carrid TYPE spfli-carrid,
            p_connid TYPE spfli-connid.

TYPES: BEGIN OF tab_type,
  cityfrom TYPE spfli-cityfrom,
  cityto TYPE spfli-cityto,
  END OF tab_type.

DATA: wa_cityfrom TYPE spfli-cityfrom,
      wa_cityto   TYPE spfli-cityto.
DATA wa_spfli TYPE spfli.
DATA spfli_tab TYPE TABLE OF tab_type.

SELECT cityfrom cityto
  FROM spfli
  INTO CORRESPONDING FIELDS OF TABLE spfli_tab
  WHERE carrid = p_carrid.


*&---------------------------------------------------------------------*
*& Report  Z_SELECT_WHERE_IN_SELOPT
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  z_select_where_in_selopt.

************************************************************************
* Report Name  : Z_SELECT_WHERE_IN_SELOPT                        *
* Report Title : <description>                                         *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 01/27/2019 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  :  ABAP Objects 2. Aufl. S. 575                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.1 | Date:01.27.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************




DATA: wa_cityfrom TYPE spfli-cityfrom,
      wa_cityto   TYPE spfli-cityto.
DATA wa_spfli TYPE spfli.
DATA wa_sflight TYPE sflight.
SELECT-OPTIONS: s_carrid FOR wa_sflight-carrid
                         NO INTERVALS NO-EXTENSION,
                s_connid FOR wa_sflight-connid
                         NO INTERVALS NO-EXTENSION,
                s_fldate FOR wa_sflight-fldate.

SELECT *
  FROM sflight
  INTO wa_sflight
  WHERE carrid IN s_carrid AND
        connid IN s_connid AND
        fldate IN s_fldate.

ENDSELECT.


*&---------------------------------------------------------------------*
*& Report  Z_SELECT_NESTED_B
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  z_select_nested_b.

************************************************************************
* Report Name  : Z_SELECT_NESTED_B
* Report Title : Zugriff a mehrere DB Tabellen mit Select Schleifen
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 01/27/2019 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  :  ABAP Objects 2. Aufl. S. 578                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.1 | Date:01.27.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************


PARAMETERS p_cityfr TYPE spfli-cityfrom DEFAULT 'Frankfurt'.

DATA: wa_carrid TYPE spfli-carrid,
      wa_connid TYPE spfli-connid,
      wa_carrname TYPE scarr-carrname.

DATA: t1 TYPE i,
      t2 TYPE i,
      time TYPE i,
      n TYPE i VALUE 1000.


DO n TIMES.
  GET RUN TIME FIELD t1.

  SELECT carrid connid
    FROM spfli
    INTO (wa_carrid, wa_connid)
    WHERE cityfrom = p_cityfr.
    SELECT carrname
      FROM scarr
      INTO wa_carrname
      WHERE carrid = wa_carrid.

    ENDSELECT.
  ENDSELECT.
  GET RUN TIME FIELD t2.
  time = time + t2 - t1.
ENDDO.
WRITE: 'Runtime:', time.




*&---------------------------------------------------------------------*
*& Report  Z_SELECT_FOR_ALL_ENTRIES_B
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  z_select_for_all_entries_b.

************************************************************************
* Report Name  : Z_SELECT_FOR_ALL_ENTRIES_B                            *
* Report Title : Zugriff auf mehrere DB Tabellen mit FOR ALL ENTRIES  *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 01/27/2019 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  :  ABAP Objects 2. Aufl. S. 578                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.1 | Date:01.27.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************

PARAMETERS p_cityfr TYPE spfli-cityfrom DEFAULT 'Frankfurt'.

DATA: BEGIN OF wa_spfli,
        carrid TYPE spfli-carrid,
        connid TYPE spfli-connid,
      END OF wa_spfli,
      BEGIN OF wa_scarr,
        carrid TYPE scarr-carrid,
        carrname TYPE scarr-carrname,
      END OF wa_scarr,
    spfli_tab LIKE TABLE OF wa_spfli.


SELECT carrid connid
  FROM spfli
  INTO TABLE spfli_tab
  WHERE cityfrom = p_cityfr.




SELECT carrid carrname
  FROM scarr
  INTO wa_scarr
  FOR ALL ENTRIES IN spfli_tab
  WHERE carrid = spfli_tab-carrid.

ENDSELECT.



*&---------------------------------------------------------------------*
*& Report  Z_SELECT_VIEW_B
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  z_select_view_b.

************************************************************************
* Report Name  : Z_SELECT_VIEW_B                                   *
* Report Title : Zugriff auf mehrere DB Tabellen über einen VIEW       *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 01/27/2019 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  :  ABAP Objects 2. Aufl. S. 580                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.1 | Date:01.27.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************

PARAMETERS p_cityfr TYPE spfli-cityfrom DEFAULT 'Frankfurt'.

DATA: wa_carrid TYPE spfli-carrid,
      wa_connid TYPE spfli-connid,
      wa_carrname TYPE scarr-carrname.

SELECT carrid carrname connid
  FROM zscarrspfli
  INTO (wa_carrid, wa_carrname, wa_connid)
  WHERE cityfrom = p_cityfr.

ENDSELECT.

*&---------------------------------------------------------------------*
*& Report  Z_SELECT_JOIN
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  z_select_join.

************************************************************************
* Report Name  : Z_SELECT_JOIN                                        *
* Report Title : Zugriff auf mehrere DB Tabellen über einen Join     *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 01/27/2019 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  :  ABAP Objects 2. Aufl. S. 580                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.1 | Date:01.27.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************

PARAMETERS p_cityfr TYPE spfli-cityfrom DEFAULT 'Frankfurt'.

DATA: wa_carrid TYPE spfli-carrid,
      wa_connid TYPE spfli-connid,
      wa_carrname TYPE scarr-carrname.

SELECT spfli~carrid scarr~carrname spfli~connid
  FROM spfli
  INNER JOIN scarr ON scarr~carrid = spfli~carrid
  INTO (wa_carrid, wa_carrname, wa_connid)
  WHERE spfli~cityfrom = p_cityfr.

ENDSELECT.


*&---------------------------------------------------------------------*
*& Report  Z_SELECT_INNER_JOIN_B
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  z_select_inner_join_b.

************************************************************************
* Report Name  : Z_SELECT_INNER_JOIN_B                                                 *
* Report Title : <description>                                         *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 99/99/9999 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.# | Date:99.99.99 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************

PARAMETERS p_fldate TYPE sflight-fldate.

TYPES: BEGIN OF t_flights,
        cityfrom  TYPE spfli-cityfrom,
        cityto    TYPE spfli-cityto,
        seatsmax  TYPE sflight-seatsmax,
        seatsocc  TYPE sflight-seatsocc,
        bookid    TYPE sbook-bookid,
  END OF t_flights.

DATA flight_tab TYPE TABLE OF t_flights.

SELECT p~cityfrom p~cityto f~seatsmax f~seatsocc b~bookid
  INTO TABLE flight_tab
  FROM ( ( spfli AS p
            INNER JOIN sflight AS f
              ON p~carrid = f~carrid AND
                 p~connid = f~connid )
            INNER JOIN sbook AS b
             ON b~carrid = f~carrid AND
                b~connid = f~connid AND
                b~fldate = f~fldate )
  WHERE f~fldate = p_fldate AND
        f~seatsmax > f~seatsocc.



*&---------------------------------------------------------------------*
*& Report  Z_OPEN_CURSOR
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  z_open_cursor.

************************************************************************
* Report Name  : Z_OPEN_CURSOR                                                 *
* Report Title : Explizite Cursor-Behandlung bei SELECT                                         *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 01/27/2019 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  :  ABAP Objects 2. Aufl. S. 580                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.1 | Date:01.27.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************

PARAMETERS p_carrid TYPE spfli-carrid.
DATA: cur TYPE cursor,
      wa_carrid TYPE spfli-carrid,
      wa_connid TYPE spfli-connid,
      wa_cityfrom TYPE spfli-cityfrom,
      wa_cityto TYPE spfli-cityto.

* Processing Blocks

START-OF-SELECTION.

  OPEN CURSOR cur FOR
  SELECT carrid connid cityfrom cityto
   FROM spfli
   WHERE carrid = p_carrid
   ORDER BY carrid.

  DO.
    FETCH NEXT CURSOR cur
    INTO (wa_carrid, wa_connid, wa_cityfrom, wa_cityto).

    IF sy-subrc <> 0.
      CLOSE CURSOR cur.
      EXIT.
    ENDIF.
  ENDDO.


*&---------------------------------------------------------------------*
*& Report  Z_DEMO_TRANSACTION_ENQUEUE
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  z_demo_transaction_enqueue message-id sabapdocu..

************************************************************************
* Report Name  : Z_DEMO_TRANSACTION_ENQUEUE                                                 *
* Report Title : Setzen einer SAP Sperre                                        *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                             *
* Create Date  : 01/26/2019 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  : ABAP Objects 2. AUfl. S. 604               *              *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.1 | Date:01.26.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************


TABLES sflight.


DATA text(8) TYPE c.
DATA ok_code TYPE sy-ucomm.
CALL SCREEN 100.

*----------------------------------------------------------------------*
*  MODULE init OUTPUT
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
MODULE init OUTPUT.
  SET PF-STATUS 'BASIC'.
  sflight-carrid = 'LH'.
  sflight-connid = '400'.
ENDMODULE.                    "init OUTPUT

*----------------------------------------------------------------------*
*  MODULE exit INPUT
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
MODULE exit INPUT.
  LEAVE PROGRAM.
ENDMODULE.                    "exit INPUT

*----------------------------------------------------------------------*
*  MODULE enqueue INPUT
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
MODULE enqueue INPUT.
  CASE ok_code.
    WHEN 'ENQUEUE'.

      CALL FUNCTION 'ENQUEUE_EZ_DEMOFLIGHT'
       EXPORTING
         mode_sflight         = 'X'
*   MODE_SBOOK           = 'E'
*   MANDT                = SY-MANDT
         carrid               = sflight-carrid
         connid               = sflight-connid
         fldate               = sflight-fldate
*   BOOKID               =
*   X_CARRID             = ' '
*   X_CONNID             = ' '
*   X_FLDATE             = ' '
*   X_BOOKID             = ' '
*   _SCOPE               = '2'
*   _WAIT                = ' '
*   _COLLECT             = ' '
       EXCEPTIONS
         foreign_lock         = 1
         system_failure       = 2
         OTHERS               = 3
                .
      IF sy-subrc <> 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
      ENDIF.


      CASE sy-subrc.
        WHEN 0.
          MESSAGE i888 WITH 'Enqueue successful'(001).
        WHEN 1.
          text = sy-msgv1.
          MESSAGE e888 WITH 'Record already'(002) 'locked by'(003)
                                                   text.
          CALL TRANSACTION 'SM12'.
        WHEN 2 OR 3.
          MESSAGE e888 WITH 'Error in enqueue!'(004)
                            'SY-SUBRC:' sy-subrc.
      ENDCASE.

    WHEN 'DEQUEUE'.
      CALL FUNCTION 'DEQUEUE_EZ_DEMOFLIGHT'
       EXPORTING
         mode_sflight       = 'E'
*     MODE_SBOOK         = 'E'
*     MANDT              = SY-MANDT
         carrid             = sflight-carrid
         connid             = sflight-connid
         fldate             = sflight-fldate
*     BOOKID             =
*     X_CARRID           = ' '
*     X_CONNID           = ' '
*     X_FLDATE           = ' '
*     X_BOOKID           = ' '
*     _SCOPE             = '3'
*     _SYNCHRON          = ' '
*     _COLLECT           = ' '
                EXCEPTIONS
                  OTHERS = 1.

      CASE sy-subrc.
        WHEN 0.
          MESSAGE i888 WITH 'Dequeue successful'(004).
        WHEN 1.
          MESSAGE e888 WITH 'Error in dequeue!'(005).
      ENDCASE.
    WHEN 'SM12'.
      CALL TRANSACTION 'SM12'.
  ENDCASE.
ENdmodule.
*----------------------------------------------------------------------*
*  MODULE select INPUT
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
MODULE select INPUT.
  CASE ok_code.
    WHEN 'SELECT'.
      SELECT * FROM sflight WHERE carrid = sflight-carrid
                              AND connid = sflight-connid
                              AND fldate = sflight-fldate.
      ENDSELECT.
      MESSAGE i888 WITH 'SY-SUBRC:' sy-subrc.
  ENDCASE.
ENDMODULE.                    "select INPUT



*&---------------------------------------------------------------------*
*& Report  Z_NATIVE_SQL_B
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  z_native_sql_b.

************************************************************************
* Report Name  : Z_NATIVE_SQL_B                                                 *
* Report Title : Native SQL in ABAP einbinden                                        *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                             *
* Create Date  : 01/26/2019 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  : ABAP Objects 2. AUfl. S. 544               *
*              : Hilfsprogramm zum Hochladen des Bildes ist            *
*              : REPORT  z_picture_save.               *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.1 | Date:01.26.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************

DATA: wa1(10) TYPE c,
      wa2(10) TYPE c,
      key(10) TYPE c.

    EXEC SQL.
      create table mytab (
      val1 char(10) not null,
      val2 char(10) not null,
      primary key (val1) )
    ENDEXEC.

DO 10 TIMES.
  wa1 = sy-index.
  wa2 = sy-index ** 2.
  EXEC SQL.
    insert into mytab values (:wa1, :wa2)
  ENDEXEC.
ENDDO.

key = 5.
EXEC SQL.
  SELECT val1, val2
    into :wa1, :wa2
    from mytab
    where val1 = :key
ENDEXEC.
WRITE: / wa1, wa2.

EXEC SQL.
  drop table mytab
ENDEXEC.




*&---------------------------------------------------------------------*
*& Report  Z_OPEN_TRANSFER_CLOSE
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  Z_OPEN_TRANSFER_CLOSE.

************************************************************************
* Report Name  : Z_OPEN_TRANSFER_CLOSE                                                 *
* Report Title : Daten in eine Datei Schreiben                                         *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                             *
* Create Date  : 01/26/2019 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  : ABAP Objects 2. AUfl. S. 609               *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.1 | Date:01.26.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************

PARAMETERS file(39) type c DEFAULT 'C:\TEMP\MYFILE.txt'.
data: wa_sflight type sflight,
      sflight_tab like table of wa_sflight.


open dataset file for input in BINARY MODE. " ENCODING UTF-8.
do.
  read DATASET file into wa_sflight.
  if sy-subrc <> 0.
    exit.
    endif.
    APPEND wa_sflight to sflight_tab.
    enddo.
    close dataset file.

*&---------------------------------------------------------------------*
*& Report  Z_OPEN_TRANSFER_CLOSE
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  Z_OPEN_TRANSFER_CLOSE_READ.

************************************************************************
* Report Name  : Z_OPEN_TRANSFER_CLOSE                                                 *
* Report Title : Daten in eine Datei Schreiben                                         *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                             *
* Create Date  : 01/26/2019 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  : ABAP Objects 2. AUfl. S. 609               *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.1 | Date:01.26.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************

PARAMETERS file(39) type c DEFAULT 'C:\TEMP\MYFILE.txt'.
data wa_sflight type sflight.

open dataset file for output in BINARY MODE. " ENCODING UTF-8.
SELECT * from sflight INTO wa_sflight.
  TRANSFER wa_sflight to file.
  ENDSELECT.
  close dataset file.


*&---------------------------------------------------------------------*
*& Report  Z_WS_DOWNLOAD_UPLOAD
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  Z_WS_DOWNLOAD_UPLOAD.

************************************************************************
* Report Name  : Z_WS_DOWNLOAD_UPLOAD                                 *
* Report Title : Daten auf dem Präsentationsserver Speichern           *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 01/26/2019 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  : ABAP Objects 2. AUfl. S. 611               *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.1 | Date:01.26.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************

PARAMETERS: fname type rlgrap-filename
              default 'C:\TEMP\myfile.dat',
            ftype type lgrap-filetype default 'BIN'.
data: sflight_tab like table of sflight,
      tab_line LIKE LINE OF sflight_tab,
      leg TYPE i,
      lins TYPE i,
      size TYPE i.

SELECT * from sflight INTO TABLE sflight_tab.
  DESCRIBE FIELD tab_line LENGTH.
  DESCRIBE TABLE sflight_tab LINES lins.
  size = leng * lins.

  CALL FUNCTION 'WS_DOWNLOAD'
   EXPORTING
*     CODEPAGE                      = ' '
     FILENAME                      = fname
     FILETYPE                      = ftype
     BIN_FILESIZE                  = size
*     MODE                          = ' '
*     WK1_N_FORMAT                  = ' '
*     WK1_N_SIZE                    = ' '
*     WK1_T_FORMAT                  = ' '
*     WK1_T_SIZE                    = ' '
*     COL_SELECT                    = ' '
*     COL_SELECTMASK                = ' '
*     NO_AUTH_CHECK                 = ' '
*   IMPORTING
*     FILELENGTH                    =
    TABLES
      data_tab                      = sflight_tab
*     FIELDNAMES                    =
   EXCEPTIONS
     FILE_OPEN_ERROR               = 1
     FILE_WRITE_ERROR              = 2
     INVALID_FILESIZE              = 3
     INVALID_TYPE                  = 4
     NO_BATCH                      = 5
     UNKNOWN_ERROR                 = 6
*     INVALID_TABLE_WIDTH           = 7
*     GUI_REFUSE_FILETRANSFER       = 8
*     CUSTOMER_ERROR                = 9
*     NO_AUTHORITY                  = 10
*     OTHERS                        = 11
            .
  IF sy-subrc <> 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  ENDIF.





*&---------------------------------------------------------------------*
*& Report  Z_EXPORT_TO_MEMORY
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  Z_EXPORT_TO_MEMORY.

************************************************************************
* Report Name  : Z_EXPORT_TO_MEMORY                                                 *
* Report Title : Daten-Cluster im ABAP Memory abspeichern                                        *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 01/27/2019 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  : ABAP Objects 2. AUfl. S. 615               *
*              : z_import_from_memory zum auslesen                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.1 | Date:01.27.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************

data: spfli_tab TYPE STANDARD TABLE OF spfli,
      sflight_tab TYPE HASHED TABLE OF sflight
      WITH UNIQUE key carrid connid fldate.
data mem_id(50) type c.

SELECT * from spfli into table spfli_tab.
SELECT * from sflight into table sflight_tab.

  CONCATENATE sy-repid sy-datum sy-uzeit into mem_id.

  export table1 = spfli_tab
         table2 = sflight_tab
         to MEMORY id mem_id.

  SUBMIT z_import_from_memory with p_id = mem_id.


*&---------------------------------------------------------------------*
*& Report  Z_IMPORT_FROM_MEMORY
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  z_import_from_memory.

************************************************************************
* Report Name  : Z_IMPORT_FROM_MEMORY                                *
* Report Title : Daten aus dem ABAP Memory einlesen                    *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 01/27/2019 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  : ABAP Objects 2. AUfl. S. 615               *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.1 | Date:01.27.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************


PARAMETERS p_id(50) TYPE c.

DATA: connection_tab TYPE SORTED TABLE OF spfli
          WITH UNIQUE KEY carrid connid,
      flight_tab type sorted table of sflight
          with unique key carrid connid fldate.

IMPORT table1 = connection_tab
       table2 = flight_tab
       FROM MEMORY ID p_id.


*&---------------------------------------------------------------------*
*& Report  Z_AUTHORITHY_CHECK
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT  z_authorithy_check MESSAGE-ID sabapdocu.

************************************************************************
* Report Name  : Z_AUTHORITHY_CHECK                                                 *
* Report Title : Berechtigungsprüfung                                        *
* SAP Release 6.0                                                      *
* Author´s Name: BUESCHERM                                         *
* Create Date  : 01/27/2019 (MM/DD/YYYY)                               *
* Called from  : <Report where used Information>                       *
*                                                                      *
* Description  : ABAP Objects 2. AUfl. S.622               *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
*              : <DESCRIPTION EXPLAINING FUNCTIONALITY>                *
************************************************************************
* Development / Modification History                                   *
************************************************************************
* Ver.1 | Date:01.27.19 | Author: M.Büscher | Destrcription/Transport  *
************************************************************************

PARAMETERS p_carrid TYPE sflight-carrid.

AT SELECTION-SCREEN.

  AUTHORITY-CHECK OBJECT 'S_CARRID'
    ID 'CARRID' FIELD p_carrid
    ID 'ACTVT' FIELD '03'.

  IF sy-subrc = 4.
    MESSAGE e045(sabapdocu) WITH p_carrid.
  ELSEIF sy-subrc <> 0.
    MESSAGE a888(sabapdocu) WITH 'ERROR!'.
  ENDIF.
